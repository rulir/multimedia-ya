"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),App=function(){function e(t){_classCallCheck(this,e),this.appEl=t,this.form=this.appEl.querySelector(".source-links-form"),this.form.addEventListener("submit",this._onSourceLinksFormSubmit.bind(this))}return _createClass(e,[{key:"_onSourceLinksFormSubmit",value:function(e){e.preventDefault(),this.urlMap={videoUrl:this.appEl.querySelector("#videoUrl").value,subUrl:this.appEl.querySelector("#subUrl").value,audioUrl:this.appEl.querySelector("#audioUrl").value},this.appEl.querySelector(".initial-page").classList.add("initial-page_hidden"),this.appEl.querySelector(".video-page").classList.remove("video-page_hidden"),this.canvas=new Canvas(this.appEl.querySelector(".canvas")),this.player=new Player(this.appEl.querySelector(".video"),this.urlMap.videoUrl,this.canvas)}}]),e}(),Player=function(){function e(t,a,i){_classCallCheck(this,e),this.playerEl=t,this.videoUrl=a,this.canvas=i,this.videoSourceEl=document.createElement("source"),this.videoSourceEl.setAttribute("src",this.videoUrl),this.playerEl.appendChild(this.videoSourceEl),this.playerEl.addEventListener("play",this._onVideoStartToPlay.bind(this))}return _createClass(e,[{key:"_onVideoStartToPlay",value:function(e){this.videoWidth=this.playerEl.videoWidth,this.videoHeight=this.playerEl.videoHeight,this.watchTheVideo()}},{key:"watchTheVideo",value:function(){var e=this;this.playerEl.paused||this.playerEl.ended||(this.paintFrame(),setTimeout(function(){e.watchTheVideo()},0))}},{key:"paintFrame",value:function(){this.canvas.context.drawImage(this.playerEl,0,0,this.videoWidth,this.videoHeight);for(var e=this.canvas.context.getImageData(0,0,this.videoWidth,this.videoHeight),t=e.data.length/4,a=0;a<t;a++){var i=e.data[4*a+0],s=e.data[4*a+1],l=e.data[4*a+2],r=.21*i+.72*s+.07*l;e.data[4*a+0]=r,e.data[4*a+1]=r,e.data[4*a+2]=r}this.canvas.context.putImageData(e,0,0)}}]),e}(),Canvas=function e(t){_classCallCheck(this,e),this.canvasEl=t,this.context=this.canvasEl.getContext("2d")},app=new App(document.querySelector(".app"));
//# sourceMappingURL=data:application/json;base64,
