"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var s=t[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,i,s){return i&&e(t.prototype,i),s&&e(t,s),t}}(),App=function(){function e(t){_classCallCheck(this,e),this.appEl=t,this.form=this.appEl.querySelector(".source-links-form"),this.form.addEventListener("submit",this._onSourceLinksFormSubmit.bind(this))}return _createClass(e,[{key:"_onSourceLinksFormSubmit",value:function(e){e.preventDefault();var t="./assets/video/overlay.mp4";this.overlayCanvas=this.appEl.querySelector(".canvas-overlay"),this.urlMap={videoUrl:this.appEl.querySelector("#videoUrl").value,subsUrl:this.appEl.querySelector("#subUrl").value,audioUrl:this.appEl.querySelector("#audioUrl").value},this.appEl.querySelector(".initial-page").classList.add("initial-page_hidden"),this.appEl.querySelector(".video-page").classList.remove("video-page_hidden"),this.subs=new Subs(this.urlMap),this.player=new Player(this.appEl.querySelector(".video-custom"),this.urlMap.videoUrl,this.subs),this.overlayPlayer=new Player(this.appEl.querySelector(".video-overlay"),t,this.subs),this.audio=new Audio(this.appEl.querySelector(".audio"),this.urlMap.audioUrl),this.canvas=new Canvas(this.appEl.querySelector(".canvas"),this.player,this.overlayPlayer,this.subs,this.overlayCanvas,this.audio)}}]),e}(),Player=function(){function e(t,i,s){_classCallCheck(this,e),this.playerEl=t,this.videoUrl=i,this.isPlaying=!1,this.width=640,this.height=360,this.playerEl.width=this.width,this.playerEl.height=this.height,this.videoSourceEl=document.createElement("source"),this.videoSourceEl.setAttribute("src",this.videoUrl),this.playerEl.appendChild(this.videoSourceEl)}return _createClass(e,[{key:"play",value:function(){this.playerEl.play()}},{key:"pause",value:function(){this.playerEl.pause()}}]),e}(),Canvas=function(){function e(t,i,s,a,r,l){_classCallCheck(this,e),this.canvasEl=t,this.overlayCanvas=r,this.player=i,this.overlayPlayer=s,this.subs=a,this.audio=l,this.overlayCanvasContext=this.overlayCanvas.getContext("2d"),this.subsCurrСue=0,this.context=this.canvasEl.getContext("2d"),this.canvasEl.addEventListener("click",this._onCanvasClick.bind(this)),this.canvasEl.width=this.player.width,this.canvasEl.height=this.player.height,this.context.fillStyle="rgb(30, 30, 30)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height)}return _createClass(e,[{key:"_onCanvasClick",value:function(e){if(this.player.isPlaying)this.player.pause(),this.overlayPlayer.pause(),this.audio.pause(),clearTimeout(this.t1),clearTimeout(this.t2),cancelAnimationFrame(this.textReq),cancelAnimationFrame(this.videoReq),this.player.isPlaying=!this.player.isPlaying;else{if(this.checkSubsAvailability(e)===!1)return;this.subs.parsedSubs=this.getNeededSubsForThisTime(),this.subsCurrСue=0,this.player.play(),this.overlayPlayer.play(),this.audio.play(),this.startTimeСountup(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this)),this.player.isPlaying=!this.player.isPlaying}}},{key:"getNeededSubsForThisTime",value:function(){var e=parseInt(1e3*this.player.playerEl.currentTime),t=this.subs.parsedSubs.filter(function(t){if(t.endTime>=e)return!0});return t}},{key:"resumePlayAfterSubs",value:function(){this.player.play(),this.startTimeСountup(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this))}},{key:"startTimeСountup",value:function(){var e=this,t=this.subs.parsedSubs[this.subsCurrСue].endTime-1e3*parseInt(this.player.playerEl.currentTime),i=this.subs.parsedSubs[this.subsCurrСue].endTime-this.subs.parsedSubs[this.subsCurrСue].startTime;this.t1=setTimeout(function(){e.player.pause(),cancelAnimationFrame(e.videoReq),e.textReq=requestAnimationFrame(e.drawText.bind(e)),clearTimeout(e.t1),e.t2=setTimeout(function(){e.subsCurrСue<e.subs.parsedSubs.length-1?e.subsCurrСue++:e.subsCurrСue=0,e.resumePlayAfterSubs(),clearTimeout(e.t2)},i)},t)}},{key:"watchTheVideo",value:function(){this.paintFrame(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this))}},{key:"paintFrame",value:function(){this.context.drawImage(this.player.playerEl,0,0,this.player.width,this.player.height),this.context.globalCompositeOperation="color",this.context.fillStyle="rgb(255, 255, 255)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height),this.paintOverlayEffect()}},{key:"paintOverlayEffect",value:function(){this.overlayCanvasContext.drawImage(this.overlayPlayer.playerEl,0,0,this.overlayPlayer.width,this.overlayPlayer.height);var e=this.overlayCanvasContext.getImageData(0,0,this.canvasEl.width,this.canvasEl.height);this.overlayCanvasContext.putImageData(e,0,0),this.context.globalCompositeOperation="multiply",this.context.drawImage(this.overlayCanvas,0,0,this.canvasEl.width,this.canvasEl.height),this.context.globalCompositeOperation="source-over"}},{key:"drawText",value:function(e){this.context.fillStyle="rgb(50, 50, 50)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height),this.context.font="36px Oranienbaum",this.context.textAlign="center",this.context.fillStyle="rgb(255, 255, 255)",this.wrapText(this.subs.parsedSubs[this.subsCurrСue].text,this.canvasEl.width,40,this.canvasEl.width/2,this.canvasEl.height/2),this.paintOverlayEffect(),cancelAnimationFrame(this.videoReq),this.textReq=requestAnimationFrame(this.drawText.bind(this))}},{key:"wrapText",value:function(e,t,i,s,a){for(var r=e.split(" "),l="",n=0;n<r.length;n++){var h=l+r[n]+" ",u=this.context.measureText(h).width;u>t-50?(this.context.fillText(l,s,a),l=r[n]+" ",a+=i):l=h}this.context.fillText(l,s,a)}},{key:"checkSubsAvailability",value:function(e){if(!this.subs.ready)return e.preventDefault(),this.player.pause(),this.player.playerEl.currentTime=0,!1}}]),e}(),Subs=function(){function e(t){var i=this;_classCallCheck(this,e),this.ready=!1,fetch(t.subsUrl).then(function(e){e.text().then(function(e){i.parsedSubs=i.parseFromSrt(e),i.ready=!0})})}return _createClass(e,[{key:"parseFromSrt",value:function(e){function t(e,t){var i=t[e].split(":"),s=i[0],a=Number(i[1]),r=i[2].split(","),l=Number(r[0]),n=Number(r[1]);t[e]=36e5*s+6e4*a+1e3*l+n}var i=parser.fromSrt(e);return i.map(function(e){t("endTime",e),t("startTime",e)}),i}}]),e}(),Audio=function(){function e(t,i){_classCallCheck(this,e),this.audioEl=t,this.url=i,this.audioSourceEl=document.createElement("source"),this.audioSourceEl.setAttribute("src",this.url),this.audioEl.appendChild(this.audioSourceEl)}return _createClass(e,[{key:"play",value:function(){this.audioEl.play()}},{key:"pause",value:function(){this.audioEl.pause()}}]),e}(),app=new App(document.querySelector(".app"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImJ1bmRsZS5qcyJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIkFwcCIsImVsIiwidGhpcyIsImFwcEVsIiwiZm9ybSIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiX29uU291cmNlTGlua3NGb3JtU3VibWl0IiwiYmluZCIsInZhbHVlIiwiZSIsInByZXZlbnREZWZhdWx0Iiwib3ZlcmxheVZpZGVvVXJsIiwib3ZlcmxheUNhbnZhcyIsInVybE1hcCIsInZpZGVvVXJsIiwic3Vic1VybCIsImF1ZGlvVXJsIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwic3VicyIsIlN1YnMiLCJwbGF5ZXIiLCJQbGF5ZXIiLCJvdmVybGF5UGxheWVyIiwiYXVkaW8iLCJBdWRpbyIsImNhbnZhcyIsIkNhbnZhcyIsInVybCIsInBsYXllckVsIiwiaXNQbGF5aW5nIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWRlb1NvdXJjZUVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJwbGF5IiwicGF1c2UiLCJjYW52YXNFbCIsIm92ZXJsYXlDYW52YXNDb250ZXh0IiwiZ2V0Q29udGV4dCIsInN1YnNDdXJy0KF1ZSIsImNvbnRleHQiLCJfb25DYW52YXNDbGljayIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiY2xlYXJUaW1lb3V0IiwidDEiLCJ0MiIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwidGV4dFJlcSIsInZpZGVvUmVxIiwiY2hlY2tTdWJzQXZhaWxhYmlsaXR5IiwicGFyc2VkU3VicyIsImdldE5lZWRlZFN1YnNGb3JUaGlzVGltZSIsInN0YXJ0VGltZdChb3VudHVwIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2F0Y2hUaGVWaWRlbyIsImN1cnJlbnRUaW1lIiwicGFyc2VJbnQiLCJmaWx0ZXJlZFN1YnMiLCJmaWx0ZXIiLCJpdGVtIiwiZW5kVGltZSIsIl90aGlzIiwiZGVsYXlUb1N0YXJ0T2ZTdWJzIiwicGF1c2VEdXJhdGlvbiIsInN0YXJ0VGltZSIsInNldFRpbWVvdXQiLCJkcmF3VGV4dCIsInJlc3VtZVBsYXlBZnRlclN1YnMiLCJwYWludEZyYW1lIiwiZHJhd0ltYWdlIiwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIiwicGFpbnRPdmVybGF5RWZmZWN0IiwiaW1hZ2VEYXRhIiwiZ2V0SW1hZ2VEYXRhIiwicHV0SW1hZ2VEYXRhIiwidGV4dCIsImZvbnQiLCJ0ZXh0QWxpZ24iLCJ3cmFwVGV4dCIsIm1heFdpZHRoIiwibGluZUhlaWdodCIsIm1hcmdpbkxlZnQiLCJtYXJnaW5Ub3AiLCJ3b3JkcyIsInNwbGl0IiwibGluZSIsInRlbXBvcmFyeVRleHRMaW5lIiwidGVtcG9yYXJ5VGV4dExpbmVXaWR0aCIsIm1lYXN1cmVUZXh0IiwiZmlsbFRleHQiLCJyZWFkeSIsIl90aGlzMiIsImZldGNoIiwidGhlbiIsInJlcyIsImRhdGEiLCJwYXJzZUZyb21TcnQiLCJzcnQiLCJ0aW1lUGFyc2VUb01zIiwidGltZVR5cGUiLCJzdWJzU3RhcnRUaW1lQnVmZmVyIiwiaG91cnMiLCJtaW5zIiwiTnVtYmVyIiwic2Vjc0FuZE1zZWNzQnVmZmVyIiwic2VjcyIsIm1zZWNzIiwicGFyc2VyIiwiZnJvbVNydCIsIm1hcCIsImF1ZGlvRWwiLCJhdWRpb1NvdXJjZUVsIiwiYXBwIl0sIm1hcHBpbmdzIjoiQUFBQSxZQ01BLFNBQVNBLGlCQUFnQkMsRUFBVUMsR0FBZSxLQUFNRCxZ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SW9DLFNBQVMvQixjQUFjIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKtC60LvQsNGB0YEg0L/RgNC40LvQvtC20LXQvdC40Y8qL1xuY2xhc3MgQXBwIHtcblx0Y29uc3RydWN0b3IoZWwpIHtcblx0XHR0aGlzLmFwcEVsID0gZWw7XG5cdFx0dGhpcy5mb3JtID0gdGhpcy5hcHBFbC5xdWVyeVNlbGVjdG9yKCcuc291cmNlLWxpbmtzLWZvcm0nKTtcblx0XHR0aGlzLmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5fb25Tb3VyY2VMaW5rc0Zvcm1TdWJtaXQuYmluZCh0aGlzKSk7XG5cdH07XG5cblx0LyrQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQvtGC0L/RgNCw0LLQutC4INGE0L7RgNC80YsuINCh0L7QsdC40YDQsNC10YIg0LTQsNC90L3Ri9C1INC40Lcg0L/QvtC70LUg0Lgg0L7RgdGD0YnQtdGB0YLQstC70Y/QtdGCINC40L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGOINGN0LvQtdC80LXQvdGC0L7QsiDQstGC0L7RgNC+0Lkg0YHRgtGA0LDQvdC40YbRiyovXG5cdF9vblNvdXJjZUxpbmtzRm9ybVN1Ym1pdChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGxldCBvdmVybGF5VmlkZW9VcmwgPSAnLi9hc3NldHMvdmlkZW8vb3ZlcmxheS5tcDQnOyAvL9Cy0LjQtNC10L4g0LTQu9GPINGB0L7Qt9C00LDQvdC40Y8g0Y3RhNGE0LXQutGC0LAg0YHRgtCw0YDQuNC90Ytcblx0XHR0aGlzLm92ZXJsYXlDYW52YXMgPSB0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy5jYW52YXMtb3ZlcmxheScpOyAvL9GD0LfQtdC7INC60LDQvdCy0LDRgdCwINC00LvRjyDQvtGC0YDQuNGB0L7QstC60Lgg0Y3RhNC10LrRgtCwINGB0YLQsNGA0LjQvdGLXG5cblx0XHQvKtGD0YDQu9GLINCy0LjQtNC10L4sINCw0YPQtNC40L4g0Lgg0YHRg9Cx0YLQuNGC0YDQvtCyINCy0LLQtdC00LXQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQvCovXG5cdFx0dGhpcy51cmxNYXAgPSB7XG5cdFx0XHR2aWRlb1VybDogdGhpcy5hcHBFbC5xdWVyeVNlbGVjdG9yKCcjdmlkZW9VcmwnKS52YWx1ZSxcblx0XHRcdHN1YnNVcmw6IHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignI3N1YlVybCcpLnZhbHVlLFxuXHRcdFx0YXVkaW9Vcmw6IHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignI2F1ZGlvVXJsJykudmFsdWUsXG5cdFx0fTtcblx0XHR0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy5pbml0aWFsLXBhZ2UnKS5jbGFzc0xpc3QuYWRkKCdpbml0aWFsLXBhZ2VfaGlkZGVuJyk7IC8v0YHRgtGA0LDQvdC40YbQsCDRgSDRhNC+0YDQvNC+0Llcblx0XHR0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy52aWRlby1wYWdlJykuY2xhc3NMaXN0LnJlbW92ZSgndmlkZW8tcGFnZV9oaWRkZW4nKTsgLy/RgdGC0YDQsNC90LjRhtCwINGBINCy0LjQtNC10L5cblx0XHR0aGlzLnN1YnMgPSBuZXcgU3Vicyh0aGlzLnVybE1hcCk7IC8v0LjQvdGB0YLQsNC90YEg0LrQu9Cw0YHRgdCwINC00LvRjyDRgNCw0LHQvtGC0Ysg0YEg0YHRg9Cx0YLQuNGC0YDQsNC80Lhcblx0XHR0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIodGhpcy5hcHBFbC5xdWVyeVNlbGVjdG9yKCcudmlkZW8tY3VzdG9tJyksIHRoaXMudXJsTWFwLnZpZGVvVXJsLCB0aGlzLnN1YnMpOyAvL9C40L3RgdGC0LDQvdGBINC/0LvQtdC10YDQsCDQtNC70Y8g0L/RgNC+0LjQs9GA0YvQstCw0L3QuNGPINC30LDQs9GA0YPQttC10L3QvdC+0LPQviDQstC40LTQtdC+XG5cdFx0dGhpcy5vdmVybGF5UGxheWVyID0gbmV3IFBsYXllcih0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy52aWRlby1vdmVybGF5JyksIG92ZXJsYXlWaWRlb1VybCwgdGhpcy5zdWJzKTsgLy/QuNC90YHRgtCw0L3RgSDQv9C70LXQtdGA0LAg0LTQu9GPINC/0YDQvtC40YDRi9Cy0LDQvdC40Y8g0LLQuNC00LXQviDRgSDRjdGE0YTQtdC60YLQvtC8INGB0YLQsNGA0LjQvdGLXG5cdFx0dGhpcy5hdWRpbyA9IG5ldyBBdWRpbyh0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy5hdWRpbycpLCB0aGlzLnVybE1hcC5hdWRpb1VybCk7IC8v0LjQvdGB0YLQsNC90YEg0LTQu9GPINGA0LDQsdC+0YLRiyDRgSDQsNGD0LTQuNC+XG5cdFx0dGhpcy5jYW52YXMgPSBuZXcgQ2FudmFzKHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLmNhbnZhcycpLCB0aGlzLnBsYXllciwgdGhpcy5vdmVybGF5UGxheWVyLCB0aGlzLnN1YnMsIHRoaXMub3ZlcmxheUNhbnZhcywgdGhpcy5hdWRpbyk7XG5cdH07XG59O1xuXG5cbi8q0LrQu9Cw0YHRgSDQtNC70Y8g0LjQvdC40YbQuNCw0LvQuNC30LDRhtC40Lgg0LLQuNC00LXQvtC/0LvQtdC10YDQsCovXG5jbGFzcyBQbGF5ZXIge1xuXHRjb25zdHJ1Y3RvcihlbCwgdXJsLCBzdWJzKSB7XG5cdFx0dGhpcy5wbGF5ZXJFbCA9IGVsO1xuXHRcdHRoaXMudmlkZW9VcmwgPSB1cmw7XG5cdFx0dGhpcy5pc1BsYXlpbmcgPSBmYWxzZTtcblx0XHR0aGlzLndpZHRoID0gNjQwOyAvL9GI0LjRgNC40L3QsCDQstC40LTQtdC+XG5cdFx0dGhpcy5oZWlnaHQgPSAzNjA7IC8v0LLRi9GB0L7RgtCwINCy0LjQtNC10L5cblx0XHR0aGlzLnBsYXllckVsLndpZHRoID0gdGhpcy53aWR0aDtcblx0XHR0aGlzLnBsYXllckVsLmhlaWdodCA9IHRoaXMuaGVpZ2h0O1xuXHRcdHRoaXMudmlkZW9Tb3VyY2VFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NvdXJjZScpOyAvL9GB0L7Qt9C00LDRgtGMINGN0LvQtdC80LXQvdGCIDxzb3VyY2U+XG5cdFx0dGhpcy52aWRlb1NvdXJjZUVsLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy52aWRlb1VybCk7IC8v0YPRgdGC0LDQvdC+0LLQuNGC0Ywg0LjRgdGC0L7Rh9C90LjQulxuXHRcdHRoaXMucGxheWVyRWwuYXBwZW5kQ2hpbGQodGhpcy52aWRlb1NvdXJjZUVsKTsgLy/QtNC+0LHQsNCy0LjRgtGMIDxzb3VyY2U+INCy0L3Rg9GC0YDRjCA8dmlkZW8+XG5cdH07XG5cblx0cGxheSgpIHtcblx0XHR0aGlzLnBsYXllckVsLnBsYXkoKTsgLy/QstC+0YHQv9GA0L7QuNC30LLQtdC00LXQvdC40LUg0LLQuNC00LXQvlxuXHR9O1xuXG5cdHBhdXNlKCkge1xuXHRcdHRoaXMucGxheWVyRWwucGF1c2UoKTsgLy/Qv9Cw0YPQt9CwXG5cdH07XG59O1xuXG4vKtC60LvQsNGB0YEg0LTQu9GPINC40L3QuNGG0LjQsNC70LjQt9Cw0YbQuNC4INC60LDQvdCy0LDRgdCwKi9cbmNsYXNzIENhbnZhcyB7XG5cdGNvbnN0cnVjdG9yKGVsLCBwbGF5ZXIsIG92ZXJsYXlQbGF5ZXIsIHN1YnMsIG92ZXJsYXlDYW52YXMsIGF1ZGlvKSB7XG5cdFx0dGhpcy5jYW52YXNFbCA9IGVsOyAvL9GD0LfQtdC7IDxjYW52YXM+INC90LAg0LrQvtGC0L7RgNC+0Lwg0LHRg9C00LXQvCDRgNC40YHQvtCy0LDRgtGMXG5cdFx0dGhpcy5vdmVybGF5Q2FudmFzID0gb3ZlcmxheUNhbnZhczsgLy8g0YPQt9C60LsgPGNhbnZhcz4g0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDRjdGE0LXQtdC60YLQsCDRgdGC0LDRgNC40L3Ri1xuXHRcdHRoaXMucGxheWVyID0gcGxheWVyOyAvL9C/0LvQtdC10YAg0LTQu9GPINC/0YDQvtC40LPRgNGL0LLQsNC90LjRjyDQt9Cw0LPRgNGD0LbQtdC90L3QvtCz0L4g0LLQuNC00LXQvlxuXHRcdHRoaXMub3ZlcmxheVBsYXllciA9IG92ZXJsYXlQbGF5ZXI7IC8v0L/Qu9C10LXRgCDQtNC70Y8g0L/RgNC+0LjQs9GA0YvQstCw0L3QuNGPINCy0LjQtNC10L4g0YEg0Y3RhNGE0LXQutGC0L7QvFxuXHRcdHRoaXMuc3VicyA9IHN1YnM7IC8v0L7QsdGK0LXQutGCINGBINGA0LDRgdC/0LDRgNGB0LXQvdC90YvQvNC4INGB0YPQsdGC0LjRgtGA0LDQvNC4XG5cdFx0dGhpcy5hdWRpbyA9IGF1ZGlvOyAvL9Cw0YPQtNC40L7Qv9C70LXQtdGAXG5cdFx0dGhpcy5vdmVybGF5Q2FudmFzQ29udGV4dCA9IHRoaXMub3ZlcmxheUNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cdFx0dGhpcy5zdWJzQ3VyctChdWUgPSAwOyAvL9C/0L7Qt9C40YbQuNGPINGC0LXQutGD0YnQtdC5INGA0LXQv9C70LjQutC4INCyINGB0YPQsdGC0LjRgtGA0LDRhSwg0LzQtdC90Y/Rj9C10YLRgdGPINC/0L7RgdC70LUg0L/QvtC60LDQt9CwINC60LDQttC00L7QuSDRhNGA0LDQt9GLXG5cdFx0dGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXNFbC5nZXRDb250ZXh0KFwiMmRcIik7XG5cdFx0dGhpcy5jYW52YXNFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2FudmFzQ2xpY2suYmluZCh0aGlzKSk7IC8v0LLQvtGB0L/RgNC+0LjQt9Cy0LXQtNC10L3QuNC1L9C/0LDRg9C30LAg0L/QviDQutC70LjQutGDXG5cdFx0dGhpcy5jYW52YXNFbC53aWR0aCA9IHRoaXMucGxheWVyLndpZHRoOyAvL9GA0LDQt9C80LXRgNGLINC60LDQvdCy0LDRgdCwINC00LvRjyDRgNCw0LLQvdGLINGA0LDQt9C80LXRgNGDINCy0LjQtNC10L7Qv9C70LXQtdGA0LBcblx0XHR0aGlzLmNhbnZhc0VsLmhlaWdodCA9IHRoaXMucGxheWVyLmhlaWdodDtcblx0XHR0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gJ3JnYigzMCwgMzAsIDMwKSc7XG5cdFx0dGhpcy5jb250ZXh0LmZpbGxSZWN0KDAsIDAsIHRoaXMuY2FudmFzRWwud2lkdGgsIHRoaXMuY2FudmFzRWwuaGVpZ2h0KTtcblx0fTtcblxuXHQvKtCy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQtS/Qv9Cw0YPQt9CwKi9cblx0X29uQ2FudmFzQ2xpY2soZSkge1xuXHRcdGlmICh0aGlzLnBsYXllci5pc1BsYXlpbmcpIHtcblx0XHRcdHRoaXMucGxheWVyLnBhdXNlKCk7IC8v0L7RgdGC0LDQvdCw0LLQu9C40LLQsNC10Lwg0L/Qu9C10LXRgCDRgSDQt9Cw0LPRgNGD0LbQtdC90L3Ri9C8INCy0LjQtNC10L4g0Lgg0LLQuNC00LXQviDRgSDRjdGE0YTQtdC60YLQvtC8XG5cdFx0XHR0aGlzLm92ZXJsYXlQbGF5ZXIucGF1c2UoKTtcblx0XHRcdHRoaXMuYXVkaW8ucGF1c2UoKTtcblx0XHRcdGNsZWFyVGltZW91dCh0aGlzLnQxKTsgLy/QvtGH0LjRidCw0LXQvCDQuNC90YLQtdGA0LLQsNC70Ysg0L/QvtC60LDQt9CwINGB0YPQsdGC0LjRgtGA0L7QslxuXHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMudDIpO1xuXHRcdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy50ZXh0UmVxKTsgLy/QvtGH0LjRidCw0LXQvCBmcmFtZSByZXF1ZXN00Ysg0L7RgtGA0LjRgdC+0LLRi9Cy0LDRjtGJ0LjQtSDRgtC10LrRgdGCINC4INC40LfQvtCx0YDQsNC20LXQvdC40LVcblx0XHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMudmlkZW9SZXEpO1xuXHRcdFx0dGhpcy5wbGF5ZXIuaXNQbGF5aW5nID0gIXRoaXMucGxheWVyLmlzUGxheWluZztcblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKHRoaXMuY2hlY2tTdWJzQXZhaWxhYmlsaXR5KGUpID09PSBmYWxzZSkgeyAvL9C/0YDQvtCy0LXRgNGP0LXQvCDQtNC+0YHRgtGD0L/QvdGLINC70Lgg0YHRg9Cx0YLQuNGC0YDRi1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9O1xuXHRcdFx0dGhpcy5zdWJzLnBhcnNlZFN1YnMgPSB0aGlzLmdldE5lZWRlZFN1YnNGb3JUaGlzVGltZSgpOyAvL9GE0LjQu9GM0YLRgNGD0LXQvCDQvNCw0YHQuNCyINGBINGB0YPQsdGC0LjRgtGA0LDQvNC4INCyINGB0L7QvtGC0LLQtdGC0YHRj9Cy0LjQuCDRgSDRgtC10LrRg9GJ0LjQvCDQstGA0LXQvNC10L3QtdC8INC/0YDQvtC40LPRgNGL0LLQsNC90LjRj1xuXHRcdFx0dGhpcy5zdWJzQ3VyctChdWUgPSAwOyAvL9C90LDRh9C40L3QsNC10Lwg0YEg0L/QtdGA0LLQvtC5INGA0LXQv9C70LjQutC4XG5cdFx0XHR0aGlzLnBsYXllci5wbGF5KCk7XG5cdFx0XHR0aGlzLm92ZXJsYXlQbGF5ZXIucGxheSgpO1xuXHRcdFx0dGhpcy5hdWRpby5wbGF5KCk7XG5cdFx0XHQvLyB0aGlzLnByZXBhcmVTaGFkZXJzKCk7XG5cdFx0XHR0aGlzLnN0YXJ0VGltZdChb3VudHVwKCk7IC8v0L3QsNGH0LjQvdCw0LXQvCDQstGL0YfQuNGB0LvRj9GC0Ywg0LLRgNC10LzRjyDQtNC+INC/0L7QutCw0LfQsCDRgdGD0LHRgtC40YLRgNC+0LJcblx0XHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMudGV4dFJlcSk7XG5cdFx0XHR0aGlzLnZpZGVvUmVxID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMud2F0Y2hUaGVWaWRlby5iaW5kKHRoaXMpKTsgLy/QvtGC0YDQuNGB0L7QstGL0LLQsNC10Lwg0LrQsNC00YBcblx0XHRcdHRoaXMucGxheWVyLmlzUGxheWluZyA9ICF0aGlzLnBsYXllci5pc1BsYXlpbmc7XG5cdFx0fTtcblx0fTtcblxuXHQvKtGE0YPQvdC60YbQuNGPINC00LvRjyDRhNC40LvRjNGC0YDQsNGG0LjQuCDRgdGD0LHRgtC40YLRgNC+0LIg0L/RgNC4INCy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQuCDQv9C+0YHQu9C1INC/0LDRg9C30Ysg0LjQu9C4INC/0LXRgNC10LzQvtGC0LrQuCovXG5cdGdldE5lZWRlZFN1YnNGb3JUaGlzVGltZSgpIHtcblx0XHRsZXQgY3VycmVudFRpbWUgPSBwYXJzZUludCh0aGlzLnBsYXllci5wbGF5ZXJFbC5jdXJyZW50VGltZSAqIDEwMDApO1xuXHRcdGxldCBmaWx0ZXJlZFN1YnMgPSB0aGlzLnN1YnMucGFyc2VkU3Vicy5maWx0ZXIoaXRlbSA9PiB7XG5cdFx0XHRpZiAoaXRlbS5lbmRUaW1lID49IGN1cnJlbnRUaW1lKSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fTtcblx0XHR9KTtcblx0XHRyZXR1cm4gZmlsdGVyZWRTdWJzOyAvL9Cy0L7Qt9Cy0YLRgNCw0YnQsNC10Lwg0LzQsNGB0YHQuNCyINGBINGA0LXQv9C70LjQutCw0LzQuCDQvdCw0YfQuNC90LDRjyDRgSDQsdC70LjQttCw0LnRiNC10Llcblx0fTtcblxuXHQvKtC/0YDQvtC00L7Qu9C20LDQtdC8INCy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQtSDQstC40LTQtdC+LCDQv9C+0YHQu9C1INC/0L7QutCw0LfQsCDRgdGD0LHRgtC40YLRgNC+0LIqL1xuXHRyZXN1bWVQbGF5QWZ0ZXJTdWJzKCkge1xuXHRcdHRoaXMucGxheWVyLnBsYXkoKTtcblx0XHR0aGlzLnN0YXJ0VGltZdChb3VudHVwKCk7XG5cdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy50ZXh0UmVxKTtcblx0XHR0aGlzLnZpZGVvUmVxID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMud2F0Y2hUaGVWaWRlby5iaW5kKHRoaXMpKTtcblx0fTtcblxuXHRzdGFydFRpbWXQoW91bnR1cCgpIHtcblx0XHQvKtCy0YvRh9C40YHQu9GP0LXQvCDQstGA0LXQvNGPINC00L4g0L3QsNGH0LDQu9CwINC/0L7QutCw0LfQsCDRgdGD0LHRgtC40YLRgNC+0LIqL1xuXHRcdGxldCBkZWxheVRvU3RhcnRPZlN1YnMgPSB0aGlzLnN1YnMucGFyc2VkU3Vic1t0aGlzLnN1YnNDdXJy0KF1ZV0uZW5kVGltZSAtIChwYXJzZUludCh0aGlzLnBsYXllci5wbGF5ZXJFbC5jdXJyZW50VGltZSkgKiAxMDAwKTtcblx0XHQvKtCy0YvRh9C40YHQu9GP0LXQvCDQstGA0LXQvNGPINC/0L7QutCw0LfQsCovXG5cdFx0bGV0IHBhdXNlRHVyYXRpb24gPSB0aGlzLnN1YnMucGFyc2VkU3Vic1t0aGlzLnN1YnNDdXJy0KF1ZV0uZW5kVGltZSAtIHRoaXMuc3Vicy5wYXJzZWRTdWJzW3RoaXMuc3Vic0N1cnLQoXVlXS5zdGFydFRpbWU7XG5cblx0XHQvKtC20LTQtdC8INC/0L7QutCwINC/0YDQuNC50LTQtdGCINCy0YDQtdC80Y8g0L/QvtC60LDQt9Cw0YLRjCDRgdGD0LHRgtC40YLRgNGLKi9cblx0XHR0aGlzLnQxID0gc2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHR0aGlzLnBsYXllci5wYXVzZSgpO1xuXHRcdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy52aWRlb1JlcSk7XG5cdFx0XHQvL9GA0LjRgdGD0LXQvCDRgdGD0LHRgtC40YLRgNGLXG5cdFx0XHR0aGlzLnRleHRSZXEgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5kcmF3VGV4dC5iaW5kKHRoaXMpKTtcblx0XHRcdGNsZWFyVGltZW91dCh0aGlzLnQxKTtcblxuXHRcdFx0LyrQttC00LXQvCDQv9C+0LrQsCDQv9GA0LjQudC00LXRgiDQstGA0LXQvNGPINC/0YDQvtC00L7Qu9C20LjRgtGMINCy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQtSovXG5cdFx0XHR0aGlzLnQyID0gc2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRcdC8q0L/RgNC+0LLQtdGA0Y/QtdC8INC90LUg0LfQsNC60L7QvdGH0LjQu9C40YHRjCDQu9C4INGB0YPQsdGC0LjRgtGA0YsqL1xuXHRcdFx0XHRpZiAodGhpcy5zdWJzQ3VyctChdWUgPCAodGhpcy5zdWJzLnBhcnNlZFN1YnMubGVuZ3RoIC0gMSkpIHtcblx0XHRcdFx0XHR0aGlzLnN1YnNDdXJy0KF1ZSsrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuc3Vic0N1cnLQoXVlID0gMDtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLnJlc3VtZVBsYXlBZnRlclN1YnMoKTtcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMudDIpO1xuXHRcdFx0fSwgcGF1c2VEdXJhdGlvbik7XG5cdFx0fSwgZGVsYXlUb1N0YXJ0T2ZTdWJzKTtcblx0fTtcblxuXHQvL9GA0LjRgdGD0LXQvCDQutCw0LTRgCDRgSDQv9C10YDQtdC+0LTQuNGH0L3QvtGB0YLRjNGOINC60LDQtNGA0L7QsiDQsiDRgdC10Lpcblx0d2F0Y2hUaGVWaWRlbygpIHtcblx0XHR0aGlzLnBhaW50RnJhbWUoKTtcblx0XHRjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnRleHRSZXEpO1xuXHRcdHRoaXMudmlkZW9SZXEgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy53YXRjaFRoZVZpZGVvLmJpbmQodGhpcykpO1xuXHR9O1xuXG5cdC8v0YTRg9C90LrRhtC40Y8g0L7RgtGA0LjRgdC+0LLQutC4INC60LDQtNGA0LAg0YEg0Y3RhNGE0LXQutGC0L7QvCBncmF5c2NhbGVcblx0cGFpbnRGcmFtZSgpIHtcblx0XHR0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucGxheWVyLnBsYXllckVsLCAwLCAwLCB0aGlzLnBsYXllci53aWR0aCwgdGhpcy5wbGF5ZXIuaGVpZ2h0KTtcblx0XHQvL9GA0LXQttC40Lwg0L3QsNC70L7QttC10L3QuNGPINC/0L7Qt9Cy0L7Qu9GP0LXRgiDQtNC+0LHQuNGC0YHRjyDRh9C10YDQvdC+LdCx0LXQu9C+0Lkg0LrQsNGA0YLQuNC90LrQuFxuXHRcdHRoaXMuY29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnY29sb3InO1xuXHRcdHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAncmdiKDI1NSwgMjU1LCAyNTUpJztcblx0XHR0aGlzLmNvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5jYW52YXNFbC53aWR0aCwgdGhpcy5jYW52YXNFbC5oZWlnaHQpO1xuXHRcdC8v0YDQuNGB0YPQtdC8INGN0YTRhNC10LrRgiDRgdGC0LDRgNC40L3Ri1xuXHRcdHRoaXMucGFpbnRPdmVybGF5RWZmZWN0KCk7XG5cdH07XG5cblx0Ly8gcHJlcGFyZVNoYWRlcnMoKSB7XG5cdC8vIFx0bGV0IHZlcnRpY2VzID0gWy0xLjAsIC0xLjAsXG5cdC8vIFx0XHQxLjAsIC0xLjAsIC0xLjAsIDEuMCxcblxuXHQvLyBcdFx0LTEuMCwgMS4wLFxuXHQvLyBcdFx0MS4wLCAtMS4wLFxuXHQvLyBcdFx0MS4wLCAxLjBcblx0Ly8gXHRdO1xuXG5cdC8vIFx0bGV0IHdlYmdsQ2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhbnZhcy13ZWJnbCcpO1xuXHQvLyBcdGxldCBnbCA9IHdlYmdsQ2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIik7XG5cblx0Ly8gXHRsZXQgY29tcGlsZVNoYWRlciA9IGZ1bmN0aW9uKHNoYWRlclNvdXJjZSwgc2hhZGVyVHlwZSkge1xuXHQvLyBcdFx0bGV0IHNoYWRlciA9IGdsLmNyZWF0ZVNoYWRlcihzaGFkZXJUeXBlKTtcblx0Ly8gXHRcdGdsLnNoYWRlclNvdXJjZShzaGFkZXIsIHNoYWRlclNvdXJjZSk7XG5cdC8vIFx0XHRnbC5jb21waWxlU2hhZGVyKHNoYWRlcik7XG5cdC8vIFx0XHRyZXR1cm4gc2hhZGVyO1xuXHQvLyBcdH07XG5cblx0Ly8gXHRsZXQgZ2V0U2hhZGVyID0gZnVuY3Rpb24oaWQpIHtcblx0Ly8gXHRcdGxldCBzaGFkZXJTY3JpcHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG5cdC8vIFx0XHRsZXQgc2hhZGVyU291cmNlID0gXCJcIjtcblx0Ly8gXHRcdGxldCB0ZXh0TGluZSA9IHNoYWRlclNjcmlwdC5maXJzdENoaWxkO1xuXHQvLyBcdFx0d2hpbGUodGV4dExpbmUpIHtcblx0Ly8gXHRcdFx0aWYgKHRleHRMaW5lLm5vZGVUeXBlID09IDMpIHtcblx0Ly8gXHRcdFx0XHRzaGFkZXJTb3VyY2UgKz0gdGV4dExpbmUudGV4dENvbnRlbnQ7XG5cdC8vIFx0XHRcdFx0dGV4dExpbmUgPSB0ZXh0TGluZS5uZXh0U2libGluZztcblx0Ly8gXHRcdFx0fTtcblx0Ly8gXHRcdH07XG5cblx0Ly8gXHRcdGxldCBzaGFkZXI7XG5cblx0Ly8gXHRcdGlmIChzaGFkZXJTY3JpcHQudHlwZSA9PSBcIngtc2hhZGVyL3gtZnJhZ21lbnRcIikge1xuXHQvLyBcdFx0XHRzaGFkZXIgPSBjb21waWxlU2hhZGVyKHNoYWRlclNvdXJjZSwgZ2wuRlJBR01FTlRfU0hBREVSKTtcblx0Ly8gXHRcdH0gZWxzZSBpZiAoc2hhZGVyU2NyaXB0LnR5cGUgPT0gXCJ4LXNoYWRlci94LXZlcnRleFwiKSB7XG5cdC8vIFx0XHRcdHNoYWRlciA9IGNvbXBpbGVTaGFkZXIoc2hhZGVyU291cmNlLCBnbC5WRVJURVhfU0hBREVSKTtcblx0Ly8gXHRcdH0gZWxzZSB7XG5cdC8vIFx0XHRcdHJldHVybiBudWxsO1xuXHQvLyBcdFx0fTtcblx0Ly8gXHRcdHJldHVybiBzaGFkZXI7XG5cdC8vIFx0fTtcblxuXHQvLyBcdGxldCB2ZXJ0ZXhTaGFkZXIgPSBnZXRTaGFkZXIoXCJ2ZXJ0ZXgtc2hhZGVyXCIpO1xuXHQvLyBcdGxldCBmcmFnbWVudGhhZGVyID0gZ2V0U2hhZGVyKFwiZnJhZ21lbnQtc2hhZGVyXCIpO1xuXG5cdC8vIFx0Y29uc29sZS5kaXIodmVydGV4U2hhZGVyLCBmcmFnbWVudGhhZGVyKTtcblxuXHQvLyBcdGxldCBzaGFkZXJQcm9ncmFtID0gZ2wuY3JlYXRlUHJvZ3JhbSgpO1xuXHQvLyBcdGdsLmF0dGFjaFNoYWRlcihzaGFkZXJQcm9ncmFtLCB2ZXJ0ZXhTaGFkZXIpO1xuXHQvLyBcdGdsLmF0dGFjaFNoYWRlcihzaGFkZXJQcm9ncmFtLCBmcmFnbWVudGhhZGVyKTtcblx0Ly8gXHRnbC5saW5rUHJvZ3JhbShzaGFkZXJQcm9ncmFtKTtcblx0Ly8gXHRnbC51c2VQcm9ncmFtKHNoYWRlclByb2dyYW0pO1xuXG5cdC8vIFx0Z2wuZGVsZXRlU2hhZGVyKHZlcnRleFNoYWRlcik7XG5cdC8vIFx0Z2wuZGVsZXRlU2hhZGVyKGZyYWdtZW50aGFkZXIpO1xuXG5cdC8vIFx0bGV0IHZlcnRleFBvc2l0aW9uTG9jYXRpb24gPSBnbC5nZXRBdHRyaWJMb2NhdGlvbihzaGFkZXJQcm9ncmFtLCBcImFWZXJ0ZXhQb3NpdGlvblwiKTtcblx0Ly8gXHRsZXQgYnVmZmVyID0gZ2wuY3JlYXRlQnVmZmVyKCk7XG5cdC8vIFx0Z2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlcik7XG5cdC8vIFx0Z2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIG5ldyBGbG9hdDMyQXJyYXkodmVydGljZXMpLCBnbC5TVEFUSUNfRFJBVyk7XG5cdC8vIFx0Z2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodmVydGV4UG9zaXRpb25Mb2NhdGlvbik7XG5cdC8vIFx0Z2wudmVydGV4QXR0cmliUG9pbnRlcih2ZXJ0ZXhQb3NpdGlvbkxvY2F0aW9uLCAyLCBnbC5GTE9BVCwgZmFsc2UsIDAsIDApO1xuXG5cdC8vIFx0bGV0IGRyYXcgPSBmdW5jdGlvbigpIHtcblx0Ly8gXHRcdGdsLmRyYXdBcnJheXMoZ2wuVFJJQU5HTEVTLCAwLCA2KTtcblx0Ly8gXHR9O1xuXG5cdC8vIFx0bGV0IHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuXHQvLyBcdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG5cdC8vIFx0XHRkcmF3KCk7XG5cdC8vIFx0fTtcblxuXHQvLyBcdHJlbmRlcigpO1xuXHQvLyB9O1xuXG5cblxuXHRwYWludE92ZXJsYXlFZmZlY3QoKSB7XG5cdFx0Ly/QsdC10YDQtdC8INC40LfQvtCx0YDQsNC20LXQvdC40LjQtSDQuNC3INC/0LvQtdC10YDQsCDQtNC70Y8g0LLQuNC00LXQviDRgSDRjdGE0YTQtdC60YLQvtC8INGB0YLQsNGA0LjQvdGLINCyINC60LDQvdCy0LDRgSDQtNC70Y8g0L7RgtGA0LjRgdCy0L7QutC4INGN0YTRhNC10LrRgtCwXG5cdFx0dGhpcy5vdmVybGF5Q2FudmFzQ29udGV4dC5kcmF3SW1hZ2UodGhpcy5vdmVybGF5UGxheWVyLnBsYXllckVsLCAwLCAwLCB0aGlzLm92ZXJsYXlQbGF5ZXIud2lkdGgsIHRoaXMub3ZlcmxheVBsYXllci5oZWlnaHQpO1xuXHRcdGxldCBpbWFnZURhdGEgPSB0aGlzLm92ZXJsYXlDYW52YXNDb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCB0aGlzLmNhbnZhc0VsLndpZHRoLCB0aGlzLmNhbnZhc0VsLmhlaWdodCk7XG5cdFx0dGhpcy5vdmVybGF5Q2FudmFzQ29udGV4dC5wdXRJbWFnZURhdGEoaW1hZ2VEYXRhLCAwLCAwKTtcblx0XHR0aGlzLmNvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gJ211bHRpcGx5Jztcblx0XHQvL9C+0YLRgNC40YHQvtCy0YvQstCw0LXQvCDRjdGE0YTQtdC60YIg0YEg0YDQtdC20LjQvNC+0Lwg0L3QsNC70L7QttC10L3QuNGPIG11bHRpcGx5XG5cdFx0dGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLm92ZXJsYXlDYW52YXMsIDAsIDAsIHRoaXMuY2FudmFzRWwud2lkdGgsIHRoaXMuY2FudmFzRWwuaGVpZ2h0KTtcblx0XHR0aGlzLmNvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gJ3NvdXJjZS1vdmVyJztcblx0fTtcblxuXHQvL9GE0YPQvdC60YbQuNGPINC00LvRjyDQvtGC0YDQuNGB0L7QstC60Lgg0YHRg9Cx0YLQuNGC0YDQvtCyXG5cdGRyYXdUZXh0KHRleHQpIHtcblx0XHR0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gJ3JnYig1MCwgNTAsIDUwKSc7XG5cdFx0Ly/RhNC+0L1cblx0XHR0aGlzLmNvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5jYW52YXNFbC53aWR0aCwgdGhpcy5jYW52YXNFbC5oZWlnaHQpO1xuXHRcdHRoaXMuY29udGV4dC5mb250ID0gJzM2cHggT3JhbmllbmJhdW0nO1xuXHRcdHRoaXMuY29udGV4dC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xuXHRcdHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAncmdiKDI1NSwgMjU1LCAyNTUpJztcblx0XHQvL9C00LXQu9Cw0LXQvCDQv9C10YDQtdC90L7RgdGLINC/0L4g0YHQu9C+0LLQsNC8XG5cdFx0dGhpcy53cmFwVGV4dCh0aGlzLnN1YnMucGFyc2VkU3Vic1t0aGlzLnN1YnNDdXJy0KF1ZV0udGV4dCwgdGhpcy5jYW52YXNFbC53aWR0aCwgNDAsIHRoaXMuY2FudmFzRWwud2lkdGggLyAyLCB0aGlzLmNhbnZhc0VsLmhlaWdodCAvIDIpO1xuXHRcdC8v0L3QsNC60LvQsNC00YvQstCw0LXQvCDRjdGE0YTQtdC60YIg0YHRgtCw0YDQuNC90Ytcblx0XHR0aGlzLnBhaW50T3ZlcmxheUVmZmVjdCgpO1xuXHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMudmlkZW9SZXEpO1xuXHRcdHRoaXMudGV4dFJlcSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmRyYXdUZXh0LmJpbmQodGhpcykpO1xuXHR9O1xuXG5cdC8v0L/QtdGA0LXQvdC+0YEg0YHRg9Cx0YLQuNGC0YDQvtCyINC/0L4g0YHQu9C+0LLQsNC8XG5cdHdyYXBUZXh0KHRleHQsIG1heFdpZHRoLCBsaW5lSGVpZ2h0LCBtYXJnaW5MZWZ0LCBtYXJnaW5Ub3ApIHtcblx0XHRsZXQgd29yZHMgPSB0ZXh0LnNwbGl0KFwiIFwiKTtcblx0XHRsZXQgbGluZSA9IFwiXCI7XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB3b3Jkcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0bGV0IHRlbXBvcmFyeVRleHRMaW5lID0gbGluZSArIHdvcmRzW2ldICsgXCIgXCI7XG5cdFx0XHQvL9C/0L7Qu9GD0YfQsNC10Lwg0YjQuNGA0LjQvdGDINC70LjQvdC40Lgg0YLQtdC60YHRgtCwXG5cdFx0XHRsZXQgdGVtcG9yYXJ5VGV4dExpbmVXaWR0aCA9IHRoaXMuY29udGV4dC5tZWFzdXJlVGV4dCh0ZW1wb3JhcnlUZXh0TGluZSkud2lkdGg7XG5cdFx0XHQvL9C/0YDQvtCy0LXRgNGP0LXQvCDQstC70LDQt9C40YIg0LvQuCDQsiDQutCw0L3QstCw0YFcblx0XHRcdGlmICh0ZW1wb3JhcnlUZXh0TGluZVdpZHRoID4gKG1heFdpZHRoIC0gNTApKSB7XG5cdFx0XHRcdHRoaXMuY29udGV4dC5maWxsVGV4dChsaW5lLCBtYXJnaW5MZWZ0LCBtYXJnaW5Ub3ApO1xuXHRcdFx0XHRsaW5lID0gd29yZHNbaV0gKyBcIiBcIjtcblx0XHRcdFx0bWFyZ2luVG9wICs9IGxpbmVIZWlnaHQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRsaW5lID0gdGVtcG9yYXJ5VGV4dExpbmU7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0dGhpcy5jb250ZXh0LmZpbGxUZXh0KGxpbmUsIG1hcmdpbkxlZnQsIG1hcmdpblRvcCk7XG5cdH07XG5cblx0Ly/Qv9GA0L7QstC10YDQutCwINC00L7RgdGC0YPQv9C90L7RgdGC0Lgg0YHRg9Cx0YLQuNGC0YDQvtCyXG5cdGNoZWNrU3Vic0F2YWlsYWJpbGl0eShlKSB7XG5cdFx0Ly/RhNC70LDQsyDRg9GB0YLQsNC90LDQstC70LjQstCw0LXRgtGB0Y8g0LXRgdC70Lgg0YHRg9Cx0YLQuNGC0YDRiyDQsdGL0LvQuCDRg9GB0L/QtdGI0L3QviDQt9Cw0LPRgNGD0LbQtdC90Ytcblx0XHRpZiAoIXRoaXMuc3Vicy5yZWFkeSkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0dGhpcy5wbGF5ZXIucGF1c2UoKTtcblx0XHRcdHRoaXMucGxheWVyLnBsYXllckVsLmN1cnJlbnRUaW1lID0gMDtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXHR9O1xufTtcblxuY2xhc3MgU3VicyB7XG5cdGNvbnN0cnVjdG9yKHVybE1hcCkge1xuXHRcdHRoaXMucmVhZHkgPSBmYWxzZTtcblx0XHQvL9C/0L7Qu9GD0YfQsNC10Lwg0YHRg9Cx0YLQuNGC0YDRiyDQv9C+IHVybFxuXHRcdGZldGNoKHVybE1hcC5zdWJzVXJsKVxuXHRcdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdFx0Ly/Qv9Cw0YDRgdC40Lwg0YHRg9Cx0YLQuNGC0YDRiyDQsiDRgtC10LrRgdGCXG5cdFx0XHRcdHJlcy50ZXh0KClcblx0XHRcdFx0XHQudGhlbihkYXRhID0+IHtcblx0XHRcdFx0XHRcdC8v0L/QsNGA0YHQuNC8INGB0YPQsdGC0LjRgtGA0Ysg0LIganNcblx0XHRcdFx0XHRcdHRoaXMucGFyc2VkU3VicyA9IHRoaXMucGFyc2VGcm9tU3J0KGRhdGEpO1xuXHRcdFx0XHRcdFx0dGhpcy5yZWFkeSA9IHRydWU7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0fTtcblxuXHQvL9C/0LDRgNGB0LjQvCDRgdGD0LHRgtC40YLRgNGLXG5cdHBhcnNlRnJvbVNydChzcnQpIHtcblx0XHQvL9C40Lcg0YLQtdC60YHRgtCwINCyIGpzLCDQvdCw0LPQu9C+LCDQv9GA0Lgg0L/QvtC80L7RidC4INCx0LjQsdC70LjQvtGC0LXQutC4IHN1YnRpdGxlLXBhcnNlclxuXHRcdGxldCBwYXJzZWRTdWJzID0gcGFyc2VyLmZyb21TcnQoc3J0KTtcblx0XHQvL9C/0YDQuNCy0L7QtNC40Lwg0LLRgNC10LzRjyDQuiDRhNC+0YDQvNCw0YLRgyDQvNC40LvQuNGB0LXQutGD0L3QtFxuXHRcdHBhcnNlZFN1YnMubWFwKGl0ZW0gPT4ge1xuXHRcdFx0dGltZVBhcnNlVG9NcygnZW5kVGltZScsIGl0ZW0pO1xuXHRcdFx0dGltZVBhcnNlVG9Ncygnc3RhcnRUaW1lJywgaXRlbSk7XG5cdFx0fSk7XG5cblx0XHRmdW5jdGlvbiB0aW1lUGFyc2VUb01zKHRpbWVUeXBlLCBpdGVtKSB7XG5cdFx0XHRsZXQgc3Vic1N0YXJ0VGltZUJ1ZmZlciA9IGl0ZW1bdGltZVR5cGVdLnNwbGl0KCc6Jyk7XG5cdFx0XHRsZXQgaG91cnMgPSBzdWJzU3RhcnRUaW1lQnVmZmVyWzBdO1xuXHRcdFx0bGV0IG1pbnMgPSBOdW1iZXIoc3Vic1N0YXJ0VGltZUJ1ZmZlclsxXSk7XG5cdFx0XHRsZXQgc2Vjc0FuZE1zZWNzQnVmZmVyID0gc3Vic1N0YXJ0VGltZUJ1ZmZlclsyXS5zcGxpdCgnLCcpO1xuXHRcdFx0bGV0IHNlY3MgPSBOdW1iZXIoc2Vjc0FuZE1zZWNzQnVmZmVyWzBdKTtcblx0XHRcdGxldCBtc2VjcyA9IE51bWJlcihzZWNzQW5kTXNlY3NCdWZmZXJbMV0pO1xuXHRcdFx0aXRlbVt0aW1lVHlwZV0gPSBob3VycyAqIDM2MDAwMDAgKyBtaW5zICogNjAwMDAgKyBzZWNzICogMTAwMCArIG1zZWNzO1xuXHRcdH07XG5cdFx0cmV0dXJuIHBhcnNlZFN1YnM7XG5cdH07XG59O1xuXG5jbGFzcyBBdWRpbyB7XG5cdGNvbnN0cnVjdG9yKGVsLCB1cmwpIHtcblx0XHR0aGlzLmF1ZGlvRWwgPSBlbDtcblx0XHR0aGlzLnVybCA9IHVybDtcblx0XHR0aGlzLmF1ZGlvU291cmNlRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzb3VyY2UnKTtcblx0XHR0aGlzLmF1ZGlvU291cmNlRWwuc2V0QXR0cmlidXRlKCdzcmMnLCB0aGlzLnVybCk7XG5cdFx0dGhpcy5hdWRpb0VsLmFwcGVuZENoaWxkKHRoaXMuYXVkaW9Tb3VyY2VFbCk7XG5cdH07XG5cdHBsYXkoKSB7XG5cdFx0dGhpcy5hdWRpb0VsLnBsYXkoKTtcblx0fTtcblx0cGF1c2UoKSB7XG5cdFx0dGhpcy5hdWRpb0VsLnBhdXNlKCk7XG5cdH07XG59O1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcHAnKSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8q0LrQu9Cw0YHRgSDQv9GA0LjQu9C+0LbQtdC90LjRjyovXG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBBcHAgPSBmdW5jdGlvbiAoKSB7XG5cdGZ1bmN0aW9uIEFwcChlbCkge1xuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHApO1xuXG5cdFx0dGhpcy5hcHBFbCA9IGVsO1xuXHRcdHRoaXMuZm9ybSA9IHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLnNvdXJjZS1saW5rcy1mb3JtJyk7XG5cdFx0dGhpcy5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX29uU291cmNlTGlua3NGb3JtU3VibWl0LmJpbmQodGhpcykpO1xuXHR9XG5cblx0X2NyZWF0ZUNsYXNzKEFwcCwgW3tcblx0XHRrZXk6ICdfb25Tb3VyY2VMaW5rc0Zvcm1TdWJtaXQnLFxuXG5cblx0XHQvKtC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINC+0YLQv9GA0LDQstC60Lgg0YTQvtGA0LzRiy4g0KHQvtCx0LjRgNCw0LXRgiDQtNCw0L3QvdGL0LUg0LjQtyDQv9C+0LvQtSDQuCDQvtGB0YPRidC10YHRgtCy0LvRj9C10YIg0LjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y4g0Y3Qu9C10LzQtdC90YLQvtCyINCy0YLQvtGA0L7QuSDRgdGC0YDQsNC90LjRhtGLKi9cblx0XHR2YWx1ZTogZnVuY3Rpb24gX29uU291cmNlTGlua3NGb3JtU3VibWl0KGUpIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHZhciBvdmVybGF5VmlkZW9VcmwgPSAnLi9hc3NldHMvdmlkZW8vb3ZlcmxheS5tcDQnOyAvL9Cy0LjQtNC10L4g0LTQu9GPINGB0L7Qt9C00LDQvdC40Y8g0Y3RhNGE0LXQutGC0LAg0YHRgtCw0YDQuNC90Ytcblx0XHRcdHRoaXMub3ZlcmxheUNhbnZhcyA9IHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLmNhbnZhcy1vdmVybGF5Jyk7IC8v0YPQt9C10Lsg0LrQsNC90LLQsNGB0LAg0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDRjdGE0LXQutGC0LAg0YHRgtCw0YDQuNC90YtcblxuXHRcdFx0LyrRg9GA0LvRiyDQstC40LTQtdC+LCDQsNGD0LTQuNC+INC4INGB0YPQsdGC0LjRgtGA0L7QsiDQstCy0LXQtNC10L3QvdGL0LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LwqL1xuXHRcdFx0dGhpcy51cmxNYXAgPSB7XG5cdFx0XHRcdHZpZGVvVXJsOiB0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJyN2aWRlb1VybCcpLnZhbHVlLFxuXHRcdFx0XHRzdWJzVXJsOiB0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJyNzdWJVcmwnKS52YWx1ZSxcblx0XHRcdFx0YXVkaW9Vcmw6IHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignI2F1ZGlvVXJsJykudmFsdWVcblx0XHRcdH07XG5cdFx0XHR0aGlzLmFwcEVsLnF1ZXJ5U2VsZWN0b3IoJy5pbml0aWFsLXBhZ2UnKS5jbGFzc0xpc3QuYWRkKCdpbml0aWFsLXBhZ2VfaGlkZGVuJyk7IC8v0YHRgtGA0LDQvdC40YbQsCDRgSDRhNC+0YDQvNC+0Llcblx0XHRcdHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLnZpZGVvLXBhZ2UnKS5jbGFzc0xpc3QucmVtb3ZlKCd2aWRlby1wYWdlX2hpZGRlbicpOyAvL9GB0YLRgNCw0L3QuNGG0LAg0YEg0LLQuNC00LXQvlxuXHRcdFx0dGhpcy5zdWJzID0gbmV3IFN1YnModGhpcy51cmxNYXApOyAvL9C40L3RgdGC0LDQvdGBINC60LvQsNGB0YHQsCDQtNC70Y8g0YDQsNCx0L7RgtGLINGBINGB0YPQsdGC0LjRgtGA0LDQvNC4XG5cdFx0XHR0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIodGhpcy5hcHBFbC5xdWVyeVNlbGVjdG9yKCcudmlkZW8tY3VzdG9tJyksIHRoaXMudXJsTWFwLnZpZGVvVXJsLCB0aGlzLnN1YnMpOyAvL9C40L3RgdGC0LDQvdGBINC/0LvQtdC10YDQsCDQtNC70Y8g0L/RgNC+0LjQs9GA0YvQstCw0L3QuNGPINC30LDQs9GA0YPQttC10L3QvdC+0LPQviDQstC40LTQtdC+XG5cdFx0XHR0aGlzLm92ZXJsYXlQbGF5ZXIgPSBuZXcgUGxheWVyKHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLnZpZGVvLW92ZXJsYXknKSwgb3ZlcmxheVZpZGVvVXJsLCB0aGlzLnN1YnMpOyAvL9C40L3RgdGC0LDQvdGBINC/0LvQtdC10YDQsCDQtNC70Y8g0L/RgNC+0LjRgNGL0LLQsNC90LjRjyDQstC40LTQtdC+INGBINGN0YTRhNC10LrRgtC+0Lwg0YHRgtCw0YDQuNC90Ytcblx0XHRcdHRoaXMuYXVkaW8gPSBuZXcgQXVkaW8odGhpcy5hcHBFbC5xdWVyeVNlbGVjdG9yKCcuYXVkaW8nKSwgdGhpcy51cmxNYXAuYXVkaW9VcmwpOyAvL9C40L3RgdGC0LDQvdGBINC00LvRjyDRgNCw0LHQvtGC0Ysg0YEg0LDRg9C00LjQvlxuXHRcdFx0dGhpcy5jYW52YXMgPSBuZXcgQ2FudmFzKHRoaXMuYXBwRWwucXVlcnlTZWxlY3RvcignLmNhbnZhcycpLCB0aGlzLnBsYXllciwgdGhpcy5vdmVybGF5UGxheWVyLCB0aGlzLnN1YnMsIHRoaXMub3ZlcmxheUNhbnZhcywgdGhpcy5hdWRpbyk7XG5cdFx0fVxuXHR9XSk7XG5cblx0cmV0dXJuIEFwcDtcbn0oKTtcblxuO1xuXG4vKtC60LvQsNGB0YEg0LTQu9GPINC40L3QuNGG0LjQsNC70LjQt9Cw0YbQuNC4INCy0LjQtNC10L7Qv9C70LXQtdGA0LAqL1xuXG52YXIgUGxheWVyID0gZnVuY3Rpb24gKCkge1xuXHRmdW5jdGlvbiBQbGF5ZXIoZWwsIHVybCwgc3Vicykge1xuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQbGF5ZXIpO1xuXG5cdFx0dGhpcy5wbGF5ZXJFbCA9IGVsO1xuXHRcdHRoaXMudmlkZW9VcmwgPSB1cmw7XG5cdFx0dGhpcy5pc1BsYXlpbmcgPSBmYWxzZTtcblx0XHR0aGlzLndpZHRoID0gNjQwOyAvL9GI0LjRgNC40L3QsCDQstC40LTQtdC+XG5cdFx0dGhpcy5oZWlnaHQgPSAzNjA7IC8v0LLRi9GB0L7RgtCwINCy0LjQtNC10L5cblx0XHR0aGlzLnBsYXllckVsLndpZHRoID0gdGhpcy53aWR0aDtcblx0XHR0aGlzLnBsYXllckVsLmhlaWdodCA9IHRoaXMuaGVpZ2h0O1xuXHRcdHRoaXMudmlkZW9Tb3VyY2VFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NvdXJjZScpOyAvL9GB0L7Qt9C00LDRgtGMINGN0LvQtdC80LXQvdGCIDxzb3VyY2U+XG5cdFx0dGhpcy52aWRlb1NvdXJjZUVsLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy52aWRlb1VybCk7IC8v0YPRgdGC0LDQvdC+0LLQuNGC0Ywg0LjRgdGC0L7Rh9C90LjQulxuXHRcdHRoaXMucGxheWVyRWwuYXBwZW5kQ2hpbGQodGhpcy52aWRlb1NvdXJjZUVsKTsgLy/QtNC+0LHQsNCy0LjRgtGMIDxzb3VyY2U+INCy0L3Rg9GC0YDRjCA8dmlkZW8+XG5cdH1cblxuXHRfY3JlYXRlQ2xhc3MoUGxheWVyLCBbe1xuXHRcdGtleTogJ3BsYXknLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBwbGF5KCkge1xuXHRcdFx0dGhpcy5wbGF5ZXJFbC5wbGF5KCk7IC8v0LLQvtGB0L/RgNC+0LjQt9Cy0LXQtNC10L3QuNC1INCy0LjQtNC10L5cblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdwYXVzZScsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHBhdXNlKCkge1xuXHRcdFx0dGhpcy5wbGF5ZXJFbC5wYXVzZSgpOyAvL9C/0LDRg9C30LBcblx0XHR9XG5cdH1dKTtcblxuXHRyZXR1cm4gUGxheWVyO1xufSgpO1xuXG47XG5cbi8q0LrQu9Cw0YHRgSDQtNC70Y8g0LjQvdC40YbQuNCw0LvQuNC30LDRhtC40Lgg0LrQsNC90LLQsNGB0LAqL1xuXG52YXIgQ2FudmFzID0gZnVuY3Rpb24gKCkge1xuXHRmdW5jdGlvbiBDYW52YXMoZWwsIHBsYXllciwgb3ZlcmxheVBsYXllciwgc3Vicywgb3ZlcmxheUNhbnZhcywgYXVkaW8pIHtcblx0XHRfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FudmFzKTtcblxuXHRcdHRoaXMuY2FudmFzRWwgPSBlbDsgLy/Rg9C30LXQuyA8Y2FudmFzPiDQvdCwINC60L7RgtC+0YDQvtC8INCx0YPQtNC10Lwg0YDQuNGB0L7QstCw0YLRjFxuXHRcdHRoaXMub3ZlcmxheUNhbnZhcyA9IG92ZXJsYXlDYW52YXM7IC8vINGD0LfQutC7IDxjYW52YXM+INC00LvRjyDQvtGC0YDQuNGB0L7QstC60Lgg0Y3RhNC10LXQutGC0LAg0YHRgtCw0YDQuNC90Ytcblx0XHR0aGlzLnBsYXllciA9IHBsYXllcjsgLy/Qv9C70LXQtdGAINC00LvRjyDQv9GA0L7QuNCz0YDRi9Cy0LDQvdC40Y8g0LfQsNCz0YDRg9C20LXQvdC90L7Qs9C+INCy0LjQtNC10L5cblx0XHR0aGlzLm92ZXJsYXlQbGF5ZXIgPSBvdmVybGF5UGxheWVyOyAvL9C/0LvQtdC10YAg0LTQu9GPINC/0YDQvtC40LPRgNGL0LLQsNC90LjRjyDQstC40LTQtdC+INGBINGN0YTRhNC10LrRgtC+0Lxcblx0XHR0aGlzLnN1YnMgPSBzdWJzOyAvL9C+0LHRitC10LrRgiDRgSDRgNCw0YHQv9Cw0YDRgdC10L3QvdGL0LzQuCDRgdGD0LHRgtC40YLRgNCw0LzQuFxuXHRcdHRoaXMuYXVkaW8gPSBhdWRpbzsgLy/QsNGD0LTQuNC+0L/Qu9C10LXRgFxuXHRcdHRoaXMub3ZlcmxheUNhbnZhc0NvbnRleHQgPSB0aGlzLm92ZXJsYXlDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuXHRcdHRoaXMuc3Vic0N1cnLQoXVlID0gMDsgLy/Qv9C+0LfQuNGG0LjRjyDRgtC10LrRg9GJ0LXQuSDRgNC10L/Qu9C40LrQuCDQsiDRgdGD0LHRgtC40YLRgNCw0YUsINC80LXQvdGP0Y/QtdGC0YHRjyDQv9C+0YHQu9C1INC/0L7QutCw0LfQsCDQutCw0LbQtNC+0Lkg0YTRgNCw0LfRi1xuXHRcdHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzRWwuZ2V0Q29udGV4dChcIjJkXCIpO1xuXHRcdHRoaXMuY2FudmFzRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9vbkNhbnZhc0NsaWNrLmJpbmQodGhpcykpOyAvL9Cy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQtS/Qv9Cw0YPQt9CwINC/0L4g0LrQu9C40LrRg1xuXHRcdHRoaXMuY2FudmFzRWwud2lkdGggPSB0aGlzLnBsYXllci53aWR0aDsgLy/RgNCw0LfQvNC10YDRiyDQutCw0L3QstCw0YHQsCDQtNC70Y8g0YDQsNCy0L3RiyDRgNCw0LfQvNC10YDRgyDQstC40LTQtdC+0L/Qu9C10LXRgNCwXG5cdFx0dGhpcy5jYW52YXNFbC5oZWlnaHQgPSB0aGlzLnBsYXllci5oZWlnaHQ7XG5cdFx0dGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9ICdyZ2IoMzAsIDMwLCAzMCknO1xuXHRcdHRoaXMuY29udGV4dC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhc0VsLndpZHRoLCB0aGlzLmNhbnZhc0VsLmhlaWdodCk7XG5cdH1cblxuXHRfY3JlYXRlQ2xhc3MoQ2FudmFzLCBbe1xuXHRcdGtleTogJ19vbkNhbnZhc0NsaWNrJyxcblxuXG5cdFx0LyrQstC+0YHQv9GA0L7QuNC30LLQtdC00LXQvdC40LUv0L/QsNGD0LfQsCovXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIF9vbkNhbnZhc0NsaWNrKGUpIHtcblx0XHRcdGlmICh0aGlzLnBsYXllci5pc1BsYXlpbmcpIHtcblx0XHRcdFx0dGhpcy5wbGF5ZXIucGF1c2UoKTsgLy/QvtGB0YLQsNC90LDQstC70LjQstCw0LXQvCDQv9C70LXQtdGAINGBINC30LDQs9GA0YPQttC10L3QvdGL0Lwg0LLQuNC00LXQviDQuCDQstC40LTQtdC+INGBINGN0YTRhNC10LrRgtC+0Lxcblx0XHRcdFx0dGhpcy5vdmVybGF5UGxheWVyLnBhdXNlKCk7XG5cdFx0XHRcdHRoaXMuYXVkaW8ucGF1c2UoKTtcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMudDEpOyAvL9C+0YfQuNGJ0LDQtdC8INC40L3RgtC10YDQstCw0LvRiyDQv9C+0LrQsNC30LAg0YHRg9Cx0YLQuNGC0YDQvtCyXG5cdFx0XHRcdGNsZWFyVGltZW91dCh0aGlzLnQyKTtcblx0XHRcdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy50ZXh0UmVxKTsgLy/QvtGH0LjRidCw0LXQvCBmcmFtZSByZXF1ZXN00Ysg0L7RgtGA0LjRgdC+0LLRi9Cy0LDRjtGJ0LjQtSDRgtC10LrRgdGCINC4INC40LfQvtCx0YDQsNC20LXQvdC40LVcblx0XHRcdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy52aWRlb1JlcSk7XG5cdFx0XHRcdHRoaXMucGxheWVyLmlzUGxheWluZyA9ICF0aGlzLnBsYXllci5pc1BsYXlpbmc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAodGhpcy5jaGVja1N1YnNBdmFpbGFiaWxpdHkoZSkgPT09IGZhbHNlKSB7XG5cdFx0XHRcdFx0Ly/Qv9GA0L7QstC10YDRj9C10Lwg0LTQvtGB0YLRg9C/0L3RiyDQu9C4INGB0YPQsdGC0LjRgtGA0Ytcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH07XG5cdFx0XHRcdHRoaXMuc3Vicy5wYXJzZWRTdWJzID0gdGhpcy5nZXROZWVkZWRTdWJzRm9yVGhpc1RpbWUoKTsgLy/RhNC40LvRjNGC0YDRg9C10Lwg0LzQsNGB0LjQsiDRgSDRgdGD0LHRgtC40YLRgNCw0LzQuCDQsiDRgdC+0L7RgtCy0LXRgtGB0Y/QstC40Lgg0YEg0YLQtdC60YPRidC40Lwg0LLRgNC10LzQtdC90LXQvCDQv9GA0L7QuNCz0YDRi9Cy0LDQvdC40Y9cblx0XHRcdFx0dGhpcy5zdWJzQ3VyctChdWUgPSAwOyAvL9C90LDRh9C40L3QsNC10Lwg0YEg0L/QtdGA0LLQvtC5INGA0LXQv9C70LjQutC4XG5cdFx0XHRcdHRoaXMucGxheWVyLnBsYXkoKTtcblx0XHRcdFx0dGhpcy5vdmVybGF5UGxheWVyLnBsYXkoKTtcblx0XHRcdFx0dGhpcy5hdWRpby5wbGF5KCk7XG5cdFx0XHRcdC8vIHRoaXMucHJlcGFyZVNoYWRlcnMoKTtcblx0XHRcdFx0dGhpcy5zdGFydFRpbWXQoW91bnR1cCgpOyAvL9C90LDRh9C40L3QsNC10Lwg0LLRi9GH0LjRgdC70Y/RgtGMINCy0YDQtdC80Y8g0LTQviDQv9C+0LrQsNC30LAg0YHRg9Cx0YLQuNGC0YDQvtCyXG5cdFx0XHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMudGV4dFJlcSk7XG5cdFx0XHRcdHRoaXMudmlkZW9SZXEgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy53YXRjaFRoZVZpZGVvLmJpbmQodGhpcykpOyAvL9C+0YLRgNC40YHQvtCy0YvQstCw0LXQvCDQutCw0LTRgFxuXHRcdFx0XHR0aGlzLnBsYXllci5pc1BsYXlpbmcgPSAhdGhpcy5wbGF5ZXIuaXNQbGF5aW5nO1xuXHRcdFx0fTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdnZXROZWVkZWRTdWJzRm9yVGhpc1RpbWUnLFxuXG5cblx0XHQvKtGE0YPQvdC60YbQuNGPINC00LvRjyDRhNC40LvRjNGC0YDQsNGG0LjQuCDRgdGD0LHRgtC40YLRgNC+0LIg0L/RgNC4INCy0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQuCDQv9C+0YHQu9C1INC/0LDRg9C30Ysg0LjQu9C4INC/0LXRgNC10LzQvtGC0LrQuCovXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGdldE5lZWRlZFN1YnNGb3JUaGlzVGltZSgpIHtcblx0XHRcdHZhciBjdXJyZW50VGltZSA9IHBhcnNlSW50KHRoaXMucGxheWVyLnBsYXllckVsLmN1cnJlbnRUaW1lICogMTAwMCk7XG5cdFx0XHR2YXIgZmlsdGVyZWRTdWJzID0gdGhpcy5zdWJzLnBhcnNlZFN1YnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHRcdGlmIChpdGVtLmVuZFRpbWUgPj0gY3VycmVudFRpbWUpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fTtcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIGZpbHRlcmVkU3ViczsgLy/QstC+0LfQstGC0YDQsNGJ0LDQtdC8INC80LDRgdGB0LjQsiDRgSDRgNC10L/Qu9C40LrQsNC80Lgg0L3QsNGH0LjQvdCw0Y8g0YEg0LHQu9C40LbQsNC50YjQtdC5XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAncmVzdW1lUGxheUFmdGVyU3VicycsXG5cblxuXHRcdC8q0L/RgNC+0LTQvtC70LbQsNC10Lwg0LLQvtGB0L/RgNC+0LjQt9Cy0LXQtNC10L3QuNC1INCy0LjQtNC10L4sINC/0L7RgdC70LUg0L/QvtC60LDQt9CwINGB0YPQsdGC0LjRgtGA0L7QsiovXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHJlc3VtZVBsYXlBZnRlclN1YnMoKSB7XG5cdFx0XHR0aGlzLnBsYXllci5wbGF5KCk7XG5cdFx0XHR0aGlzLnN0YXJ0VGltZdChb3VudHVwKCk7XG5cdFx0XHRjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnRleHRSZXEpO1xuXHRcdFx0dGhpcy52aWRlb1JlcSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLndhdGNoVGhlVmlkZW8uYmluZCh0aGlzKSk7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnc3RhcnRUaW1l0KFvdW50dXAnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBzdGFydFRpbWVPdW50dXAoKSB7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQvKtCy0YvRh9C40YHQu9GP0LXQvCDQstGA0LXQvNGPINC00L4g0L3QsNGH0LDQu9CwINC/0L7QutCw0LfQsCDRgdGD0LHRgtC40YLRgNC+0LIqL1xuXHRcdFx0dmFyIGRlbGF5VG9TdGFydE9mU3VicyA9IHRoaXMuc3Vicy5wYXJzZWRTdWJzW3RoaXMuc3Vic0N1cnLQoXVlXS5lbmRUaW1lIC0gcGFyc2VJbnQodGhpcy5wbGF5ZXIucGxheWVyRWwuY3VycmVudFRpbWUpICogMTAwMDtcblx0XHRcdC8q0LLRi9GH0LjRgdC70Y/QtdC8INCy0YDQtdC80Y8g0L/QvtC60LDQt9CwKi9cblx0XHRcdHZhciBwYXVzZUR1cmF0aW9uID0gdGhpcy5zdWJzLnBhcnNlZFN1YnNbdGhpcy5zdWJzQ3VyctChdWVdLmVuZFRpbWUgLSB0aGlzLnN1YnMucGFyc2VkU3Vic1t0aGlzLnN1YnNDdXJy0KF1ZV0uc3RhcnRUaW1lO1xuXG5cdFx0XHQvKtC20LTQtdC8INC/0L7QutCwINC/0YDQuNC50LTQtdGCINCy0YDQtdC80Y8g0L/QvtC60LDQt9Cw0YLRjCDRgdGD0LHRgtC40YLRgNGLKi9cblx0XHRcdHRoaXMudDEgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0X3RoaXMucGxheWVyLnBhdXNlKCk7XG5cdFx0XHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKF90aGlzLnZpZGVvUmVxKTtcblx0XHRcdFx0Ly/RgNC40YHRg9C10Lwg0YHRg9Cx0YLQuNGC0YDRi1xuXHRcdFx0XHRfdGhpcy50ZXh0UmVxID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF90aGlzLmRyYXdUZXh0LmJpbmQoX3RoaXMpKTtcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KF90aGlzLnQxKTtcblxuXHRcdFx0XHQvKtC20LTQtdC8INC/0L7QutCwINC/0YDQuNC50LTQtdGCINCy0YDQtdC80Y8g0L/RgNC+0LTQvtC70LbQuNGC0Ywg0LLQvtGB0L/RgNC+0LjQt9Cy0LXQtNC10L3QuNC1Ki9cblx0XHRcdFx0X3RoaXMudDIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHQvKtC/0YDQvtCy0LXRgNGP0LXQvCDQvdC1INC30LDQutC+0L3Rh9C40LvQuNGB0Ywg0LvQuCDRgdGD0LHRgtC40YLRgNGLKi9cblx0XHRcdFx0XHRpZiAoX3RoaXMuc3Vic0N1cnLQoXVlIDwgX3RoaXMuc3Vicy5wYXJzZWRTdWJzLmxlbmd0aCAtIDEpIHtcblx0XHRcdFx0XHRcdF90aGlzLnN1YnNDdXJy0KF1ZSsrO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRfdGhpcy5zdWJzQ3VyctChdWUgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRfdGhpcy5yZXN1bWVQbGF5QWZ0ZXJTdWJzKCk7XG5cdFx0XHRcdFx0Y2xlYXJUaW1lb3V0KF90aGlzLnQyKTtcblx0XHRcdFx0fSwgcGF1c2VEdXJhdGlvbik7XG5cdFx0XHR9LCBkZWxheVRvU3RhcnRPZlN1YnMpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3dhdGNoVGhlVmlkZW8nLFxuXG5cblx0XHQvL9GA0LjRgdGD0LXQvCDQutCw0LTRgCDRgSDQv9C10YDQtdC+0LTQuNGH0L3QvtGB0YLRjNGOINC60LDQtNGA0L7QsiDQsiDRgdC10Lpcblx0XHR2YWx1ZTogZnVuY3Rpb24gd2F0Y2hUaGVWaWRlbygpIHtcblx0XHRcdHRoaXMucGFpbnRGcmFtZSgpO1xuXHRcdFx0Y2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy50ZXh0UmVxKTtcblx0XHRcdHRoaXMudmlkZW9SZXEgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy53YXRjaFRoZVZpZGVvLmJpbmQodGhpcykpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3BhaW50RnJhbWUnLFxuXG5cblx0XHQvL9GE0YPQvdC60YbQuNGPINC+0YLRgNC40YHQvtCy0LrQuCDQutCw0LTRgNCwINGBINGN0YTRhNC10LrRgtC+0LwgZ3JheXNjYWxlXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHBhaW50RnJhbWUoKSB7XG5cdFx0XHR0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucGxheWVyLnBsYXllckVsLCAwLCAwLCB0aGlzLnBsYXllci53aWR0aCwgdGhpcy5wbGF5ZXIuaGVpZ2h0KTtcblx0XHRcdC8v0YDQtdC20LjQvCDQvdCw0LvQvtC20LXQvdC40Y8g0L/QvtC30LLQvtC70Y/QtdGCINC00L7QsdC40YLRgdGPINGH0LXRgNC90L4t0LHQtdC70L7QuSDQutCw0YDRgtC40L3QutC4XG5cdFx0XHR0aGlzLmNvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gJ2NvbG9yJztcblx0XHRcdHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAncmdiKDI1NSwgMjU1LCAyNTUpJztcblx0XHRcdHRoaXMuY29udGV4dC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhc0VsLndpZHRoLCB0aGlzLmNhbnZhc0VsLmhlaWdodCk7XG5cdFx0XHQvL9GA0LjRgdGD0LXQvCDRjdGE0YTQtdC60YIg0YHRgtCw0YDQuNC90Ytcblx0XHRcdHRoaXMucGFpbnRPdmVybGF5RWZmZWN0KCk7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAncGFpbnRPdmVybGF5RWZmZWN0JyxcblxuXG5cdFx0Ly8gcHJlcGFyZVNoYWRlcnMoKSB7XG5cdFx0Ly8gXHRsZXQgdmVydGljZXMgPSBbLTEuMCwgLTEuMCxcblx0XHQvLyBcdFx0MS4wLCAtMS4wLCAtMS4wLCAxLjAsXG5cblx0XHQvLyBcdFx0LTEuMCwgMS4wLFxuXHRcdC8vIFx0XHQxLjAsIC0xLjAsXG5cdFx0Ly8gXHRcdDEuMCwgMS4wXG5cdFx0Ly8gXHRdO1xuXG5cdFx0Ly8gXHRsZXQgd2ViZ2xDYW52YXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FudmFzLXdlYmdsJyk7XG5cdFx0Ly8gXHRsZXQgZ2wgPSB3ZWJnbENhbnZhcy5nZXRDb250ZXh0KFwiZXhwZXJpbWVudGFsLXdlYmdsXCIpO1xuXG5cdFx0Ly8gXHRsZXQgY29tcGlsZVNoYWRlciA9IGZ1bmN0aW9uKHNoYWRlclNvdXJjZSwgc2hhZGVyVHlwZSkge1xuXHRcdC8vIFx0XHRsZXQgc2hhZGVyID0gZ2wuY3JlYXRlU2hhZGVyKHNoYWRlclR5cGUpO1xuXHRcdC8vIFx0XHRnbC5zaGFkZXJTb3VyY2Uoc2hhZGVyLCBzaGFkZXJTb3VyY2UpO1xuXHRcdC8vIFx0XHRnbC5jb21waWxlU2hhZGVyKHNoYWRlcik7XG5cdFx0Ly8gXHRcdHJldHVybiBzaGFkZXI7XG5cdFx0Ly8gXHR9O1xuXG5cdFx0Ly8gXHRsZXQgZ2V0U2hhZGVyID0gZnVuY3Rpb24oaWQpIHtcblx0XHQvLyBcdFx0bGV0IHNoYWRlclNjcmlwdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcblx0XHQvLyBcdFx0bGV0IHNoYWRlclNvdXJjZSA9IFwiXCI7XG5cdFx0Ly8gXHRcdGxldCB0ZXh0TGluZSA9IHNoYWRlclNjcmlwdC5maXJzdENoaWxkO1xuXHRcdC8vIFx0XHR3aGlsZSh0ZXh0TGluZSkge1xuXHRcdC8vIFx0XHRcdGlmICh0ZXh0TGluZS5ub2RlVHlwZSA9PSAzKSB7XG5cdFx0Ly8gXHRcdFx0XHRzaGFkZXJTb3VyY2UgKz0gdGV4dExpbmUudGV4dENvbnRlbnQ7XG5cdFx0Ly8gXHRcdFx0XHR0ZXh0TGluZSA9IHRleHRMaW5lLm5leHRTaWJsaW5nO1xuXHRcdC8vIFx0XHRcdH07XG5cdFx0Ly8gXHRcdH07XG5cblx0XHQvLyBcdFx0bGV0IHNoYWRlcjtcblxuXHRcdC8vIFx0XHRpZiAoc2hhZGVyU2NyaXB0LnR5cGUgPT0gXCJ4LXNoYWRlci94LWZyYWdtZW50XCIpIHtcblx0XHQvLyBcdFx0XHRzaGFkZXIgPSBjb21waWxlU2hhZGVyKHNoYWRlclNvdXJjZSwgZ2wuRlJBR01FTlRfU0hBREVSKTtcblx0XHQvLyBcdFx0fSBlbHNlIGlmIChzaGFkZXJTY3JpcHQudHlwZSA9PSBcIngtc2hhZGVyL3gtdmVydGV4XCIpIHtcblx0XHQvLyBcdFx0XHRzaGFkZXIgPSBjb21waWxlU2hhZGVyKHNoYWRlclNvdXJjZSwgZ2wuVkVSVEVYX1NIQURFUik7XG5cdFx0Ly8gXHRcdH0gZWxzZSB7XG5cdFx0Ly8gXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0Ly8gXHRcdH07XG5cdFx0Ly8gXHRcdHJldHVybiBzaGFkZXI7XG5cdFx0Ly8gXHR9O1xuXG5cdFx0Ly8gXHRsZXQgdmVydGV4U2hhZGVyID0gZ2V0U2hhZGVyKFwidmVydGV4LXNoYWRlclwiKTtcblx0XHQvLyBcdGxldCBmcmFnbWVudGhhZGVyID0gZ2V0U2hhZGVyKFwiZnJhZ21lbnQtc2hhZGVyXCIpO1xuXG5cdFx0Ly8gXHRjb25zb2xlLmRpcih2ZXJ0ZXhTaGFkZXIsIGZyYWdtZW50aGFkZXIpO1xuXG5cdFx0Ly8gXHRsZXQgc2hhZGVyUHJvZ3JhbSA9IGdsLmNyZWF0ZVByb2dyYW0oKTtcblx0XHQvLyBcdGdsLmF0dGFjaFNoYWRlcihzaGFkZXJQcm9ncmFtLCB2ZXJ0ZXhTaGFkZXIpO1xuXHRcdC8vIFx0Z2wuYXR0YWNoU2hhZGVyKHNoYWRlclByb2dyYW0sIGZyYWdtZW50aGFkZXIpO1xuXHRcdC8vIFx0Z2wubGlua1Byb2dyYW0oc2hhZGVyUHJvZ3JhbSk7XG5cdFx0Ly8gXHRnbC51c2VQcm9ncmFtKHNoYWRlclByb2dyYW0pO1xuXG5cdFx0Ly8gXHRnbC5kZWxldGVTaGFkZXIodmVydGV4U2hhZGVyKTtcblx0XHQvLyBcdGdsLmRlbGV0ZVNoYWRlcihmcmFnbWVudGhhZGVyKTtcblxuXHRcdC8vIFx0bGV0IHZlcnRleFBvc2l0aW9uTG9jYXRpb24gPSBnbC5nZXRBdHRyaWJMb2NhdGlvbihzaGFkZXJQcm9ncmFtLCBcImFWZXJ0ZXhQb3NpdGlvblwiKTtcblx0XHQvLyBcdGxldCBidWZmZXIgPSBnbC5jcmVhdGVCdWZmZXIoKTtcblx0XHQvLyBcdGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXIpO1xuXHRcdC8vIFx0Z2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIG5ldyBGbG9hdDMyQXJyYXkodmVydGljZXMpLCBnbC5TVEFUSUNfRFJBVyk7XG5cdFx0Ly8gXHRnbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh2ZXJ0ZXhQb3NpdGlvbkxvY2F0aW9uKTtcblx0XHQvLyBcdGdsLnZlcnRleEF0dHJpYlBvaW50ZXIodmVydGV4UG9zaXRpb25Mb2NhdGlvbiwgMiwgZ2wuRkxPQVQsIGZhbHNlLCAwLCAwKTtcblxuXHRcdC8vIFx0bGV0IGRyYXcgPSBmdW5jdGlvbigpIHtcblx0XHQvLyBcdFx0Z2wuZHJhd0FycmF5cyhnbC5UUklBTkdMRVMsIDAsIDYpO1xuXHRcdC8vIFx0fTtcblxuXHRcdC8vIFx0bGV0IHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuXHRcdC8vIFx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyKTtcblx0XHQvLyBcdFx0ZHJhdygpO1xuXHRcdC8vIFx0fTtcblxuXHRcdC8vIFx0cmVuZGVyKCk7XG5cdFx0Ly8gfTtcblxuXHRcdHZhbHVlOiBmdW5jdGlvbiBwYWludE92ZXJsYXlFZmZlY3QoKSB7XG5cdFx0XHQvL9Cx0LXRgNC10Lwg0LjQt9C+0LHRgNCw0LbQtdC90LjQuNC1INC40Lcg0L/Qu9C10LXRgNCwINC00LvRjyDQstC40LTQtdC+INGBINGN0YTRhNC10LrRgtC+0Lwg0YHRgtCw0YDQuNC90Ysg0LIg0LrQsNC90LLQsNGBINC00LvRjyDQvtGC0YDQuNGB0LLQvtC60Lgg0Y3RhNGE0LXQutGC0LBcblx0XHRcdHRoaXMub3ZlcmxheUNhbnZhc0NvbnRleHQuZHJhd0ltYWdlKHRoaXMub3ZlcmxheVBsYXllci5wbGF5ZXJFbCwgMCwgMCwgdGhpcy5vdmVybGF5UGxheWVyLndpZHRoLCB0aGlzLm92ZXJsYXlQbGF5ZXIuaGVpZ2h0KTtcblx0XHRcdHZhciBpbWFnZURhdGEgPSB0aGlzLm92ZXJsYXlDYW52YXNDb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCB0aGlzLmNhbnZhc0VsLndpZHRoLCB0aGlzLmNhbnZhc0VsLmhlaWdodCk7XG5cdFx0XHR0aGlzLm92ZXJsYXlDYW52YXNDb250ZXh0LnB1dEltYWdlRGF0YShpbWFnZURhdGEsIDAsIDApO1xuXHRcdFx0dGhpcy5jb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdtdWx0aXBseSc7XG5cdFx0XHQvL9C+0YLRgNC40YHQvtCy0YvQstCw0LXQvCDRjdGE0YTQtdC60YIg0YEg0YDQtdC20LjQvNC+0Lwg0L3QsNC70L7QttC10L3QuNGPIG11bHRpcGx5XG5cdFx0XHR0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMub3ZlcmxheUNhbnZhcywgMCwgMCwgdGhpcy5jYW52YXNFbC53aWR0aCwgdGhpcy5jYW52YXNFbC5oZWlnaHQpO1xuXHRcdFx0dGhpcy5jb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2Utb3Zlcic7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnZHJhd1RleHQnLFxuXG5cblx0XHQvL9GE0YPQvdC60YbQuNGPINC00LvRjyDQvtGC0YDQuNGB0L7QstC60Lgg0YHRg9Cx0YLQuNGC0YDQvtCyXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGRyYXdUZXh0KHRleHQpIHtcblx0XHRcdHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAncmdiKDUwLCA1MCwgNTApJztcblx0XHRcdC8v0YTQvtC9XG5cdFx0XHR0aGlzLmNvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5jYW52YXNFbC53aWR0aCwgdGhpcy5jYW52YXNFbC5oZWlnaHQpO1xuXHRcdFx0dGhpcy5jb250ZXh0LmZvbnQgPSAnMzZweCBPcmFuaWVuYmF1bSc7XG5cdFx0XHR0aGlzLmNvbnRleHQudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcblx0XHRcdHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAncmdiKDI1NSwgMjU1LCAyNTUpJztcblx0XHRcdC8v0LTQtdC70LDQtdC8INC/0LXRgNC10L3QvtGB0Ysg0L/QviDRgdC70L7QstCw0Lxcblx0XHRcdHRoaXMud3JhcFRleHQodGhpcy5zdWJzLnBhcnNlZFN1YnNbdGhpcy5zdWJzQ3VyctChdWVdLnRleHQsIHRoaXMuY2FudmFzRWwud2lkdGgsIDQwLCB0aGlzLmNhbnZhc0VsLndpZHRoIC8gMiwgdGhpcy5jYW52YXNFbC5oZWlnaHQgLyAyKTtcblx0XHRcdC8v0L3QsNC60LvQsNC00YvQstCw0LXQvCDRjdGE0YTQtdC60YIg0YHRgtCw0YDQuNC90Ytcblx0XHRcdHRoaXMucGFpbnRPdmVybGF5RWZmZWN0KCk7XG5cdFx0XHRjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnZpZGVvUmVxKTtcblx0XHRcdHRoaXMudGV4dFJlcSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmRyYXdUZXh0LmJpbmQodGhpcykpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3dyYXBUZXh0JyxcblxuXG5cdFx0Ly/Qv9C10YDQtdC90L7RgSDRgdGD0LHRgtC40YLRgNC+0LIg0L/QviDRgdC70L7QstCw0Lxcblx0XHR2YWx1ZTogZnVuY3Rpb24gd3JhcFRleHQodGV4dCwgbWF4V2lkdGgsIGxpbmVIZWlnaHQsIG1hcmdpbkxlZnQsIG1hcmdpblRvcCkge1xuXHRcdFx0dmFyIHdvcmRzID0gdGV4dC5zcGxpdChcIiBcIik7XG5cdFx0XHR2YXIgbGluZSA9IFwiXCI7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHdvcmRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdHZhciB0ZW1wb3JhcnlUZXh0TGluZSA9IGxpbmUgKyB3b3Jkc1tpXSArIFwiIFwiO1xuXHRcdFx0XHQvL9C/0L7Qu9GD0YfQsNC10Lwg0YjQuNGA0LjQvdGDINC70LjQvdC40Lgg0YLQtdC60YHRgtCwXG5cdFx0XHRcdHZhciB0ZW1wb3JhcnlUZXh0TGluZVdpZHRoID0gdGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KHRlbXBvcmFyeVRleHRMaW5lKS53aWR0aDtcblx0XHRcdFx0Ly/Qv9GA0L7QstC10YDRj9C10Lwg0LLQu9Cw0LfQuNGCINC70Lgg0LIg0LrQsNC90LLQsNGBXG5cdFx0XHRcdGlmICh0ZW1wb3JhcnlUZXh0TGluZVdpZHRoID4gbWF4V2lkdGggLSA1MCkge1xuXHRcdFx0XHRcdHRoaXMuY29udGV4dC5maWxsVGV4dChsaW5lLCBtYXJnaW5MZWZ0LCBtYXJnaW5Ub3ApO1xuXHRcdFx0XHRcdGxpbmUgPSB3b3Jkc1tpXSArIFwiIFwiO1xuXHRcdFx0XHRcdG1hcmdpblRvcCArPSBsaW5lSGVpZ2h0O1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpbmUgPSB0ZW1wb3JhcnlUZXh0TGluZTtcblx0XHRcdFx0fTtcblx0XHRcdH07XG5cdFx0XHR0aGlzLmNvbnRleHQuZmlsbFRleHQobGluZSwgbWFyZ2luTGVmdCwgbWFyZ2luVG9wKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdjaGVja1N1YnNBdmFpbGFiaWxpdHknLFxuXG5cblx0XHQvL9C/0YDQvtCy0LXRgNC60LAg0LTQvtGB0YLRg9C/0L3QvtGB0YLQuCDRgdGD0LHRgtC40YLRgNC+0LJcblx0XHR2YWx1ZTogZnVuY3Rpb24gY2hlY2tTdWJzQXZhaWxhYmlsaXR5KGUpIHtcblx0XHRcdC8v0YTQu9Cw0LMg0YPRgdGC0LDQvdCw0LLQu9C40LLQsNC10YLRgdGPINC10YHQu9C4INGB0YPQsdGC0LjRgtGA0Ysg0LHRi9C70Lgg0YPRgdC/0LXRiNC90L4g0LfQsNCz0YDRg9C20LXQvdGLXG5cdFx0XHRpZiAoIXRoaXMuc3Vicy5yZWFkeSkge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdHRoaXMucGxheWVyLnBhdXNlKCk7XG5cdFx0XHRcdHRoaXMucGxheWVyLnBsYXllckVsLmN1cnJlbnRUaW1lID0gMDtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9XG5cdH1dKTtcblxuXHRyZXR1cm4gQ2FudmFzO1xufSgpO1xuXG47XG5cbnZhciBTdWJzID0gZnVuY3Rpb24gKCkge1xuXHRmdW5jdGlvbiBTdWJzKHVybE1hcCkge1xuXHRcdHZhciBfdGhpczIgPSB0aGlzO1xuXG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN1YnMpO1xuXG5cdFx0dGhpcy5yZWFkeSA9IGZhbHNlO1xuXHRcdC8v0L/QvtC70YPRh9Cw0LXQvCDRgdGD0LHRgtC40YLRgNGLINC/0L4gdXJsXG5cdFx0ZmV0Y2godXJsTWFwLnN1YnNVcmwpLnRoZW4oZnVuY3Rpb24gKHJlcykge1xuXHRcdFx0Ly/Qv9Cw0YDRgdC40Lwg0YHRg9Cx0YLQuNGC0YDRiyDQsiDRgtC10LrRgdGCXG5cdFx0XHRyZXMudGV4dCgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcblx0XHRcdFx0Ly/Qv9Cw0YDRgdC40Lwg0YHRg9Cx0YLQuNGC0YDRiyDQsiBqc1xuXHRcdFx0XHRfdGhpczIucGFyc2VkU3VicyA9IF90aGlzMi5wYXJzZUZyb21TcnQoZGF0YSk7XG5cdFx0XHRcdF90aGlzMi5yZWFkeSA9IHRydWU7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXG5cdF9jcmVhdGVDbGFzcyhTdWJzLCBbe1xuXHRcdGtleTogJ3BhcnNlRnJvbVNydCcsXG5cblxuXHRcdC8v0L/QsNGA0YHQuNC8INGB0YPQsdGC0LjRgtGA0Ytcblx0XHR2YWx1ZTogZnVuY3Rpb24gcGFyc2VGcm9tU3J0KHNydCkge1xuXHRcdFx0Ly/QuNC3INGC0LXQutGB0YLQsCDQsiBqcywg0L3QsNCz0LvQviwg0L/RgNC4INC/0L7QvNC+0YnQuCDQsdC40LHQu9C40L7RgtC10LrQuCBzdWJ0aXRsZS1wYXJzZXJcblx0XHRcdHZhciBwYXJzZWRTdWJzID0gcGFyc2VyLmZyb21TcnQoc3J0KTtcblx0XHRcdC8v0L/RgNC40LLQvtC00LjQvCDQstGA0LXQvNGPINC6INGE0L7RgNC80LDRgtGDINC80LjQu9C40YHQtdC60YPQvdC0XG5cdFx0XHRwYXJzZWRTdWJzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0XHR0aW1lUGFyc2VUb01zKCdlbmRUaW1lJywgaXRlbSk7XG5cdFx0XHRcdHRpbWVQYXJzZVRvTXMoJ3N0YXJ0VGltZScsIGl0ZW0pO1xuXHRcdFx0fSk7XG5cblx0XHRcdGZ1bmN0aW9uIHRpbWVQYXJzZVRvTXModGltZVR5cGUsIGl0ZW0pIHtcblx0XHRcdFx0dmFyIHN1YnNTdGFydFRpbWVCdWZmZXIgPSBpdGVtW3RpbWVUeXBlXS5zcGxpdCgnOicpO1xuXHRcdFx0XHR2YXIgaG91cnMgPSBzdWJzU3RhcnRUaW1lQnVmZmVyWzBdO1xuXHRcdFx0XHR2YXIgbWlucyA9IE51bWJlcihzdWJzU3RhcnRUaW1lQnVmZmVyWzFdKTtcblx0XHRcdFx0dmFyIHNlY3NBbmRNc2Vjc0J1ZmZlciA9IHN1YnNTdGFydFRpbWVCdWZmZXJbMl0uc3BsaXQoJywnKTtcblx0XHRcdFx0dmFyIHNlY3MgPSBOdW1iZXIoc2Vjc0FuZE1zZWNzQnVmZmVyWzBdKTtcblx0XHRcdFx0dmFyIG1zZWNzID0gTnVtYmVyKHNlY3NBbmRNc2Vjc0J1ZmZlclsxXSk7XG5cdFx0XHRcdGl0ZW1bdGltZVR5cGVdID0gaG91cnMgKiAzNjAwMDAwICsgbWlucyAqIDYwMDAwICsgc2VjcyAqIDEwMDAgKyBtc2Vjcztcblx0XHRcdH07XG5cdFx0XHRyZXR1cm4gcGFyc2VkU3Vicztcblx0XHR9XG5cdH1dKTtcblxuXHRyZXR1cm4gU3Vicztcbn0oKTtcblxuO1xuXG52YXIgQXVkaW8gPSBmdW5jdGlvbiAoKSB7XG5cdGZ1bmN0aW9uIEF1ZGlvKGVsLCB1cmwpIHtcblx0XHRfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXVkaW8pO1xuXG5cdFx0dGhpcy5hdWRpb0VsID0gZWw7XG5cdFx0dGhpcy51cmwgPSB1cmw7XG5cdFx0dGhpcy5hdWRpb1NvdXJjZUVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJyk7XG5cdFx0dGhpcy5hdWRpb1NvdXJjZUVsLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy51cmwpO1xuXHRcdHRoaXMuYXVkaW9FbC5hcHBlbmRDaGlsZCh0aGlzLmF1ZGlvU291cmNlRWwpO1xuXHR9XG5cblx0X2NyZWF0ZUNsYXNzKEF1ZGlvLCBbe1xuXHRcdGtleTogJ3BsYXknLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBwbGF5KCkge1xuXHRcdFx0dGhpcy5hdWRpb0VsLnBsYXkoKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdwYXVzZScsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHBhdXNlKCkge1xuXHRcdFx0dGhpcy5hdWRpb0VsLnBhdXNlKCk7XG5cdFx0fVxuXHR9XSk7XG5cblx0cmV0dXJuIEF1ZGlvO1xufSgpO1xuXG47XG5cbnZhciBhcHAgPSBuZXcgQXBwKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcHAnKSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
