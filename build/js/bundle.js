"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,i,a){return i&&e(t.prototype,i),a&&e(t,a),t}}(),App=function(){function e(t){_classCallCheck(this,e),this.appEl=t,this.form=this.appEl.querySelector(".source-links-form"),this.form.addEventListener("submit",this._onSourceLinksFormSubmit.bind(this))}return _createClass(e,[{key:"_onSourceLinksFormSubmit",value:function(e){e.preventDefault();var t="./assets/video/overlay.mp4";this.overlayCanvas=this.appEl.querySelector(".canvas-overlay"),this.urlMap={videoUrl:this.appEl.querySelector("#videoUrl").value,subsUrl:this.appEl.querySelector("#subUrl").value,audioUrl:this.appEl.querySelector("#audioUrl").value},this.appEl.querySelector(".initial-page").classList.add("initial-page_hidden"),this.appEl.querySelector(".video-page").classList.remove("video-page_hidden"),this.subs=new Subs(this.urlMap),this.player=new Player(this.appEl.querySelector(".video-custom"),this.urlMap.videoUrl,this.subs),this.overlayPlayer=new Player(this.appEl.querySelector(".video-overlay"),t,this.subs),this.audio=new Audio(this.appEl.querySelector(".audio"),this.urlMap.audioUrl),this.canvas=new Canvas(this.appEl.querySelector(".canvas"),this.player,this.overlayPlayer,this.subs,this.overlayCanvas,this.audio)}}]),e}(),Player=function(){function e(t,i,a){_classCallCheck(this,e),this.playerEl=t,this.videoUrl=i,this.isPlaying=!1,this.width=640,this.height=360,this.playerEl.width=this.width,this.playerEl.height=this.height,this.videoSourceEl=document.createElement("source"),this.videoSourceEl.setAttribute("src",this.videoUrl),this.playerEl.appendChild(this.videoSourceEl)}return _createClass(e,[{key:"play",value:function(){this.playerEl.play()}},{key:"pause",value:function(){this.playerEl.pause()}}]),e}(),Canvas=function(){function e(t,i,a,s,r,l){_classCallCheck(this,e),this.canvasEl=t,this.overlayCanvas=r,this.player=i,this.overlayPlayer=a,this.subs=s,this.audio=l,this.overlayCanvasContext=this.overlayCanvas.getContext("2d"),this.subsCurrСue=0,this.context=this.canvasEl.getContext("2d"),this.canvasEl.addEventListener("click",this._onCanvasClick.bind(this)),this.canvasEl.width=this.player.width,this.canvasEl.height=this.player.height,this.context.fillStyle="rgb(30, 30, 30)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height)}return _createClass(e,[{key:"_onCanvasClick",value:function(e){if(this.player.isPlaying)this.player.pause(),this.overlayPlayer.pause(),this.audio.pause(),clearTimeout(this.t1),clearTimeout(this.t2),cancelAnimationFrame(this.textReq),cancelAnimationFrame(this.videoReq),this.player.isPlaying=!this.player.isPlaying;else{if(this.checkSubsAvailability(e)===!1)return;this.subs.parsedSubs=this.getNeededSubsForThisTime(),this.subsCurrСue=0,this.player.play(),this.overlayPlayer.play(),this.audio.play(),this.prepareShaders(),this.startTimeСountup(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this)),this.player.isPlaying=!this.player.isPlaying}}},{key:"getNeededSubsForThisTime",value:function(){var e=parseInt(1e3*this.player.playerEl.currentTime),t=this.subs.parsedSubs.filter(function(t){if(t.endTime>=e)return!0});return t}},{key:"resumePlayAfterSubs",value:function(){this.player.play(),this.startTimeСountup(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this))}},{key:"startTimeСountup",value:function(){var e=this,t=this.subs.parsedSubs[this.subsCurrСue].endTime-1e3*parseInt(this.player.playerEl.currentTime),i=this.subs.parsedSubs[this.subsCurrСue].endTime-this.subs.parsedSubs[this.subsCurrСue].startTime;this.t1=setTimeout(function(){e.player.pause(),cancelAnimationFrame(e.videoReq),e.textReq=requestAnimationFrame(e.drawText.bind(e)),clearTimeout(e.t1),e.t2=setTimeout(function(){e.subsCurrСue<e.subs.parsedSubs.length-1?e.subsCurrСue++:e.subsCurrСue=0,e.resumePlayAfterSubs(),clearTimeout(e.t2)},i)},t)}},{key:"watchTheVideo",value:function(){this.paintFrame(),cancelAnimationFrame(this.textReq),this.videoReq=requestAnimationFrame(this.watchTheVideo.bind(this))}},{key:"paintFrame",value:function(){this.context.drawImage(this.player.playerEl,0,0,this.player.width,this.player.height),this.context.globalCompositeOperation="color",this.context.fillStyle="rgb(255, 255, 255)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height),this.paintOverlayEffect()}},{key:"prepareShaders",value:function(){var e=[-1,-1,1,-1,-1,1,-1,1,1,-1,1,1],t=document.querySelector(".canvas-webgl"),i=t.getContext("experimental-webgl"),a=function(e,t){var a=i.createShader(t);return i.shaderSource(a,e),i.compileShader(a),a},s=function(e){for(var t=document.getElementById(e),s="",r=t.firstChild;r;)3==r.nodeType&&(s+=r.textContent,r=r.nextSibling);var l=void 0;if("x-shader/x-fragment"==t.type)l=a(s,i.FRAGMENT_SHADER);else{if("x-shader/x-vertex"!=t.type)return null;l=a(s,i.VERTEX_SHADER)}return l},r=s("vertex-shader"),l=s("fragment-shader");console.dir(r,l);var n=i.createProgram();i.attachShader(n,r),i.attachShader(n,l),i.linkProgram(n),i.useProgram(n),i.deleteShader(r),i.deleteShader(l);var h=i.getAttribLocation(n,"aVertexPosition"),u=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,u),i.bufferData(i.ARRAY_BUFFER,new Float32Array(e),i.STATIC_DRAW),i.enableVertexAttribArray(h),i.vertexAttribPointer(h,2,i.FLOAT,!1,0,0);var o=function(){i.drawArrays(i.TRIANGLES,0,6)},c=function p(){requestAnimationFrame(p),o()};c()}},{key:"paintOverlayEffect",value:function(){this.overlayCanvasContext.drawImage(this.overlayPlayer.playerEl,0,0,this.overlayPlayer.width,this.overlayPlayer.height);var e=this.overlayCanvasContext.getImageData(0,0,this.canvasEl.width,this.canvasEl.height);this.overlayCanvasContext.putImageData(e,0,0),this.context.globalCompositeOperation="multiply",this.context.drawImage(this.overlayCanvas,0,0,this.canvasEl.width,this.canvasEl.height),this.context.globalCompositeOperation="source-over"}},{key:"drawText",value:function(e){this.context.fillStyle="rgb(50, 50, 50)",this.context.fillRect(0,0,this.canvasEl.width,this.canvasEl.height),this.context.font="36px Oranienbaum",this.context.textAlign="center",this.context.fillStyle="rgb(255, 255, 255)",this.wrapText(this.subs.parsedSubs[this.subsCurrСue].text,this.canvasEl.width,40,this.canvasEl.width/2,this.canvasEl.height/2),this.paintOverlayEffect(),cancelAnimationFrame(this.videoReq),this.textReq=requestAnimationFrame(this.drawText.bind(this))}},{key:"wrapText",value:function(e,t,i,a,s){for(var r=e.split(" "),l="",n=0;n<r.length;n++){var h=l+r[n]+" ",u=this.context.measureText(h).width;u>t-50?(this.context.fillText(l,a,s),l=r[n]+" ",s+=i):l=h}this.context.fillText(l,a,s)}},{key:"checkSubsAvailability",value:function(e){if(!this.subs.ready)return e.preventDefault(),this.player.pause(),this.player.playerEl.currentTime=0,!1}}]),e}(),Subs=function(){function e(t){var i=this;_classCallCheck(this,e),this.ready=!1,fetch(t.subsUrl).then(function(e){e.text().then(function(e){i.parsedSubs=i.parseFromSrt(e),i.ready=!0})})}return _createClass(e,[{key:"parseFromSrt",value:function(e){function t(e,t){var i=t[e].split(":"),a=i[0],s=Number(i[1]),r=i[2].split(","),l=Number(r[0]),n=Number(r[1]);t[e]=36e5*a+6e4*s+1e3*l+n}var i=parser.fromSrt(e);return i.map(function(e){t("endTime",e),t("startTime",e)}),i}}]),e}(),Audio=function(){function e(t,i){_classCallCheck(this,e),this.audioEl=t,this.url=i,this.audioSourceEl=document.createElement("source"),this.audioSourceEl.setAttribute("src",this.url),this.audioEl.appendChild(this.audioSourceEl)}return _createClass(e,[{key:"play",value:function(){this.audioEl.play()}},{key:"pause",value:function(){this.audioEl.pause()}}]),e}(),app=new App(document.querySelector(".app"));
//# sourceMappingURL=data:application/json;base64,
